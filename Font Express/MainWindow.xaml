<Window x:Class="Font_Express.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Font_Express"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ex="clr-namespace:ExpressControls;assembly=ExpressControls"
        xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        mc:Ignorable="d" x:Name="Main"
        Title="Font Express" Height="680" Width="1180" MinWidth="600" d:FontFamily="Inter" MinHeight="415" Style="{DynamicResource ChromeWindowStyle}" Loaded="Main_Loaded" Closing="Main_Closing">
    <Window.Resources>
        <local:FavouriteIconConverter x:Key="FavouriteIconConverter"/>
        <local:FavouriteToolTipConverter x:Key="FavouriteToolTipConverter"/>
        <FontWeight x:Key="PreviewFontWeight">Normal</FontWeight>
        <FontStyle x:Key="PreviewFontStyle">Normal</FontStyle>
        <sys:Double x:Key="PreviewFontSize">24</sys:Double>
        <sys:String x:Key="PreviewText">Preview</sys:String>
        <ContextMenu x:Key="CategoryMenu" FontSize="14" Background="{DynamicResource SecondaryColor}" Style="{DynamicResource ExpressContextMenu}">
            <MenuItem Click="EditCategoryMenuBtn_Click" Header="{DynamicResource EditCatStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="ClearFontsMenuBtn_Click" Header="{DynamicResource ClearFontsStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="RemoveCategoryMenuBtn_Click" Header="{DynamicResource RemoveCatStr}" Style="{DynamicResource ExpressMenuItem}"/>
        </ContextMenu>

        <Storyboard x:Key="MenuStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MenuPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HomeStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HomePnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ViewStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ViewPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CategoryStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CategoryPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- Shortcuts -->
        <RoutedUICommand x:Key="AllCommand" Text="All"></RoutedUICommand>
        <RoutedUICommand x:Key="FavCommand" Text="Favourites"></RoutedUICommand>
        <RoutedUICommand x:Key="CompareCommand" Text="Compare"></RoutedUICommand>
        <RoutedUICommand x:Key="BoldCommand" Text="Bold"></RoutedUICommand>
        <RoutedUICommand x:Key="ItalicCommand" Text="Italic"></RoutedUICommand>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource AllCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource FavCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource CompareCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="NavigationCommands.Refresh" Executed="CommandBinding_Executed" />
        <CommandBinding Command="ApplicationCommands.Find" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource BoldCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource ItalicCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="ApplicationCommands.Help" Executed="CommandBinding_Executed" />
        <CommandBinding Command="ApplicationCommands.Properties" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource AllCommand}" />
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{StaticResource FavCommand}" />
        <KeyBinding Key="M" Modifiers="Ctrl" Command="{StaticResource CompareCommand}" />
        <KeyBinding Key="B" Modifiers="Ctrl" Command="{StaticResource BoldCommand}" />
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{StaticResource ItalicCommand}" />
    </Window.InputBindings>

    <Grid x:Name="WindowGrid">
        <Grid x:Name="grid1" Background="{DynamicResource TertiaryColor}">
            <Grid Margin="0,72,0,30">
                <ScrollViewer x:Name="Scroller" Margin="0" HorizontalScrollBarVisibility="Disabled" ScrollChanged="Scroller_ScrollChanged">
                    <StackPanel ScrollViewer.HorizontalScrollBarVisibility="Visible" Background="{DynamicResource BackColor}" Margin="0">
                        <DockPanel Margin="40,30,40,0">
                            <ContentControl x:Name="HeaderIcon" Width="34" Height="34" Content="{DynamicResource SearchIcon}" Focusable="False"/>
                            <ex:AppButton x:Name="RemoveCategoryBtn" Click="RemoveCategoryBtn_Click" DockPanel.Dock="Right" Background="{DynamicResource BackSpecialColor}" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" ToolTip="{DynamicResource RemoveCatStr}" IconSize="18" Height="30" Margin="10,0,10,0" Padding="8,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                            <ex:AppButton x:Name="EditCategoryBtn" Click="EditCategoryBtn_Click" DockPanel.Dock="Right" Background="{DynamicResource BackSpecialColor}" Icon="{DynamicResource EditIcon}" Text="{DynamicResource EditStr}" IconSize="18" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                            <TextBlock x:Name="HeaderLbl" FontSize="20" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="15,0,0,0" VerticalAlignment="Center">
                                <Run Text="Search results" FontWeight="SemiBold"/>
                                <LineBreak/>
                                <Run Text="Search query" FontSize="14"/>
                            </TextBlock>
                        </DockPanel>
                        <ItemsControl x:Name="FontGrid" Margin="30" RequestBringIntoView="FontGrid_RequestBringIntoView">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <controls:VirtualizingWrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <StackPanel Background="{DynamicResource BackColor}">
                                            <StackPanel.Style>
                                                <Style TargetType="{x:Type StackPanel}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked, ElementName=ViewListBtn}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Rectangle Fill="{DynamicResource Gray1}" Height="1" Margin="0,0,0,5"/>
                                            <DockPanel>
                                                <TextBlock Text="{Binding}" FontSize="14" MaxWidth="400" FontWeight="SemiBold" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="0" VerticalAlignment="Center"/>
                                                <ex:AppButton Click="CopyBtns_Click" Tag="{Binding}" Icon="{DynamicResource CopyIcon}" Text="{DynamicResource CopyCmStr}" IconSize="18" Height="26" Padding="6,0" FontSize="12" NoShadow="True" GapMargin="4,1,0,0" Margin="10,0,20,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center">
                                                    <ex:AppButton.Style>
                                                        <Style TargetType="{x:Type ex:AppButton}">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}, Path=IsMouseOver}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ex:AppButton.Style>
                                                </ex:AppButton>
                                            </DockPanel>
                                            <Grid Margin="0,0,0,20">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" FontFamily="{Binding}" Grid.ColumnSpan="3" Text="{DynamicResource PreviewText}" FontStyle="{DynamicResource PreviewFontStyle}" FontWeight="{DynamicResource PreviewFontWeight}" FontSize="{DynamicResource PreviewFontSize}" TextWrapping="NoWrap" TextTrimming="None" Margin="0,10,20,10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                <Grid Grid.Column="1">
                                                    <Grid.Background>
                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                            <GradientStop Color="{DynamicResource BackTransDirectColor}"/>
                                                            <GradientStop Color="{DynamicResource BackDirectColor}" Offset="0.8"/>
                                                        </LinearGradientBrush>
                                                    </Grid.Background>
                                                </Grid>
                                                <StackPanel Grid.Column="2" Tag="{Binding}" Background="{DynamicResource BackColor}" VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,0,20,0" Orientation="Horizontal">
                                                    <StackPanel.Style>
                                                        <Style TargetType="{x:Type StackPanel}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}, Path=IsMouseOver}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                                <Trigger Property="IsHitTestVisible" Value="False">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </StackPanel.Style>
                                                    <ex:AppButton Click="ExpandBtns_Click" Background="{DynamicResource BackSpecialColor}" Tag="{Binding}" Icon="{DynamicResource ExpandIcon}" Text="{DynamicResource ExpandStr}" IconSize="18" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                    <ex:AppButton Click="CategoryPreviewBtns_Click" Background="{DynamicResource BackSpecialColor}" MoreVisibility="Visible" Tag="{Binding}" Icon="{DynamicResource CategoryIcon}" Text="{DynamicResource CategoriesStr}" IconSize="18" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                    <ex:AppButton Click="FavouritePreviewBtns_Click" Background="{DynamicResource BackSpecialColor}" Tag="{Binding}" Icon="{Binding Converter={StaticResource FavouriteIconConverter}}" ToolTip="{Binding Converter={StaticResource FavouriteToolTipConverter}}" TextVisibility="Collapsed" IconSize="18" Height="30" Margin="10,0,0,0" Padding="8,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                        <UniformGrid>
                                            <UniformGrid.Style>
                                                <Style TargetType="{x:Type UniformGrid}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked, ElementName=ViewGridBtn}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </UniformGrid.Style>
                                            <DockPanel Background="{DynamicResource BackColor}" Margin="5,0,5,20" Width="350" Height="150">
                                                <Rectangle DockPanel.Dock="Top" Fill="{DynamicResource Gray1}" Height="1" Margin="0,0,0,5"/>
                                                <DockPanel DockPanel.Dock="Top">
                                                    <TextBlock Text="{Binding}" FontSize="14" MaxWidth="400" FontWeight="SemiBold" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="0" VerticalAlignment="Center"/>
                                                    <ex:AppButton Click="CopyBtns_Click" Tag="{Binding}" Icon="{DynamicResource CopyIcon}" Text="{DynamicResource CopyCmStr}" IconSize="18" Height="26" Padding="6,0" FontSize="12" NoShadow="True" GapMargin="4,1,0,0" Margin="10,0,20,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center">
                                                        <ex:AppButton.Style>
                                                            <Style TargetType="{x:Type ex:AppButton}">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UniformGrid}}, Path=IsMouseOver}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ex:AppButton.Style>
                                                    </ex:AppButton>
                                                </DockPanel>
                                                <Grid Margin="0" DockPanel.Dock="Top">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="40"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" FontFamily="{Binding}" Grid.RowSpan="3" Text="{DynamicResource PreviewText}" FontStyle="{DynamicResource PreviewFontStyle}" FontWeight="{DynamicResource PreviewFontWeight}" FontSize="{DynamicResource PreviewFontSize}" TextWrapping="Wrap" TextTrimming="None" Margin="0,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                                                    <Grid Grid.Row="1">
                                                        <Grid.Background>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="{DynamicResource BackTransDirectColor}"/>
                                                                <GradientStop Color="{DynamicResource BackDirectColor}" Offset="0.8"/>
                                                            </LinearGradientBrush>
                                                        </Grid.Background>
                                                    </Grid>
                                                    <Grid Grid.Row="2" Background="{DynamicResource BackColor}">
                                                        <StackPanel Tag="{Binding}" VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,10,10,0" Orientation="Horizontal">
                                                            <StackPanel.Style>
                                                                <Style TargetType="{x:Type StackPanel}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UniformGrid}}, Path=IsMouseOver}" Value="True">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsHitTestVisible" Value="False">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </StackPanel.Style>
                                                            <ex:AppButton Click="ExpandBtns_Click" Background="{DynamicResource BackSpecialColor}" Tag="{Binding}" Icon="{DynamicResource ExpandIcon}" Text="{DynamicResource ExpandStr}" IconSize="18" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                            <ex:AppButton Click="CategoryPreviewBtns_Click" Background="{DynamicResource BackSpecialColor}" MoreVisibility="Visible" Tag="{Binding}" Icon="{DynamicResource CategoryIcon}" Text="{DynamicResource CategoriesStr}" IconSize="18" Height="30" Margin="10,0,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                            <ex:AppButton Click="FavouritePreviewBtns_Click" Background="{DynamicResource BackSpecialColor}" Tag="{Binding}" Icon="{Binding Converter={StaticResource FavouriteIconConverter}}" ToolTip="{Binding Converter={StaticResource FavouriteToolTipConverter}}" TextVisibility="Collapsed" IconSize="18" Height="30" Margin="10,0,0,0" Padding="8,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                            </DockPanel>
                                        </UniformGrid>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Rectangle Fill="{DynamicResource Gray1}" Height="1" Margin="30,-30,30,5"/>
                        <TextBlock x:Name="NoFontsLbl" Visibility="Collapsed" Text="{DynamicResource NoFontsHereStr}" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" MaxWidth="500" Margin="30,40,30,40" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <DockPanel x:Name="PagePnl" Margin="30,20,30,25" HorizontalAlignment="Center">
                            <ex:AppButton x:Name="PrevPageBtn" Background="{DynamicResource BackSpecialColor}" Click="PrevPageBtn_Click" Icon="{DynamicResource LeftIcon}" ToolTip="{DynamicResource PrevPageStr}" IconSize="18" Height="30" TextVisibility="Collapsed" Padding="6,0" Margin="10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                            <ex:AppButton x:Name="NextPageBtn" Background="{DynamicResource BackSpecialColor}" Click="NextPageBtn_Click" DockPanel.Dock="Right" Icon="{DynamicResource RightIcon}" ToolTip="{DynamicResource NextPageStr}" IconSize="18" Height="30" TextVisibility="Collapsed" Padding="6,0" Margin="10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                            <TextBlock x:Name="PageLbl" Text="{DynamicResource PageStr}" FontSize="14" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="15,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DockPanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <DockPanel Margin="0">
                <TabControl x:Name="DocTabs" Margin="0,4,0,0" DockPanel.Dock="Top" Height="68" Padding="0" BorderThickness="0" SelectedIndex="1" Panel.ZIndex="1">
                    <TabControl.Effect>
                        <DropShadowEffect Direction="270" Color="Gray" Opacity="0.1" BlurRadius="10"/>
                    </TabControl.Effect>
                    <TabItem x:Name="MenuTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="MenuScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="MenuPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="OptionsBtn" Click="OptionsBtn_Click" Text="{DynamicResource OptionStr}" Icon="{DynamicResource GearsIcon}"/>
                                    <ex:MenuButton x:Name="AboutBtn" Click="AboutBtn_Click" Text="{DynamicResource AboutFontStr}" Icon="{DynamicResource InfoIcon}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="MenuScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="MenuLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="MenuRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="HomeTab" Header="TabItem" Focusable="False">
                        <Grid x:Name="grid2" Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="HomeScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="HomePnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource ShowFStr}" Padding="5,0"/>
                                    <DockPanel x:Name="FilterMenuPnl" Margin="3,4,0,0">
                                        <Rectangle x:Name="FilterSelector" DockPanel.Dock="Bottom" Fill="{DynamicResource AppColor}" Height="6" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=AllBtn, Mode=OneWay}" HorizontalAlignment="Left" Margin="0,0,0,-3" RadiusX="3" RadiusY="3"/>
                                        <ex:MenuButton x:Name="AllBtn" Click="AllBtn_Click" Text="{DynamicResource FnAllStr}" Icon="{DynamicResource EditorIcon}" ToolTip="{DynamicResource AllToolStr}"/>
                                        <ex:MenuButton x:Name="FavouritesBtn" Click="FavouritesBtn_Click" Text="{DynamicResource FavouriteStr}" Icon="{DynamicResource FavouriteIcon}" ToolTip="{DynamicResource FavToolStr}"/>
                                        <ex:MenuButton x:Name="CategorySelectorBtn" Click="CategorySelectorBtn_Click" Text="{DynamicResource CategoryStr}" ToolTip="{DynamicResource CategoryToolStr}" Icon="{DynamicResource BulletsIcon}" MoreVisibility="Visible"/>
                                        <ex:MenuButton x:Name="SuggestedBtn" Click="SuggestedBtn_Click" Text="{DynamicResource SuggestedStr}" Icon="{DynamicResource StylesIcon}" ToolTip="{DynamicResource SuggestToolStr}"/>
                                        <ex:MenuButton x:Name="AlphaBtn" Click="AlphaBtn_Click" Text="{DynamicResource StartsWithStr}" ToolTip="{DynamicResource AlphaToolStr}" Icon="{DynamicResource AlphabeticalIcon}" IsRSquared="True"/>
                                        <Separator Style="{StaticResource VerticalSeparator}" Margin="-12,0" Width="15"/>
                                        <ex:MenuButton x:Name="MoreAlphaBtn" Click="MoreAlphaBtn_Click" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" Padding="2,0,4,0" Height="32"/>
                                        <ex:AppTextBox x:Name="SearchTxt" PreviewKeyDown="SearchTxt_PreviewKeyDown" Watermark="{DynamicResource SearchStr}" Margin="6,0,3,0" Width="125" FontSize="12" VerticalContentAlignment="Center" VerticalAlignment="Center" Padding="2"/>
                                    </DockPanel>
                                    <ex:MenuButton x:Name="SearchBtn" Click="SearchBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource SearchIcon}" ToolTip="{DynamicResource SearchStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="CompareBtn" Click="CompareBtn_Click" Text="{DynamicResource CompareFontsStr}" Icon="{DynamicResource CaseIcon}" ToolTip="{DynamicResource CompareToolStr}"/>
                                    <ex:MenuButton x:Name="DownloadFontsBtn" Click="DownloadFontsBtn_Click" Text="{DynamicResource DownloadFontsStr}" Icon="{DynamicResource DownloadIcon}" ToolTip="{DynamicResource DownloadFontsToolStr}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="HomeScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="HomeLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="HomeRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="ViewTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="ViewScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="ViewPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <DockPanel Margin="3,3,3,0">
                                        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                                            <Rectangle x:Name="BoldSelector" Fill="{DynamicResource AppColor}" Height="6" VerticalAlignment="Top" Width="30" HorizontalAlignment="Left" Margin="3,0,3,-3" Visibility="Hidden" RadiusX="3" RadiusY="3"/>
                                            <Rectangle x:Name="ItalicSelector" Fill="{DynamicResource AppColor}" Height="6" VerticalAlignment="Top" Width="30" HorizontalAlignment="Left" Margin="3,0,3,-3" Visibility="Hidden" RadiusX="3" RadiusY="3"/>
                                        </StackPanel>
                                        <ex:MenuButton x:Name="BoldViewBtn" Click="BoldViewBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource BoldIcon}" ToolTip="{DynamicResource BoldStr}"/>
                                        <ex:MenuButton x:Name="ItalicViewBtn" Click="ItalicViewBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource ItalicIcon}" ToolTip="{DynamicResource ItalicStr}"/>
                                    </DockPanel>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource FontSizeMenuStr}" Padding="6,0"/>
                                    <ex:AppTextBox x:Name="FontSizeTxt" PreviewKeyDown="FontSizeTxt_PreviewKeyDown" Text="24" Margin="6,0,0,0" Width="40" FontSize="12" UndoLimit="0" IsUndoEnabled="False" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" Padding="0,2" MaxLength="6"/>
                                    <ex:MenuButton x:Name="FontSizesBtn" Click="FontSizesBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" ToolTip="{DynamicResource FontSizeStr}"/>
                                    <ex:MenuButton x:Name="PreviewTextBtn" Click="PreviewTextBtn_Click" Text="{DynamicResource PreviewTextStr}" Icon="{DynamicResource LeftAlignIcon}" ToolTip="{DynamicResource PreviewTextToolStr}" MoreVisibility="Visible" Margin="3,0,0,0"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="PerPageBtn" Click="PerPageBtn_Click" Text="Per page: 25" Icon="{DynamicResource BlankIcon}" MoreVisibility="Visible"/>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource DisplayFontsStr}" Padding="10,0,6,0"/>
                                    <ex:AppRadioButton x:Name="ViewListBtn" Click="DisplayFontsBtns_Click" Tag="list" Content="{DynamicResource ListStr}" GroupName="ViewRadioOptions" Padding="6,0"/>
                                    <ex:AppRadioButton x:Name="ViewGridBtn" Click="DisplayFontsBtns_Click" Tag="grid" Content="{DynamicResource GridStr}" GroupName="ViewRadioOptions" IsChecked="True" Padding="6,0"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="ViewScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="ViewLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="ViewRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="CategoryTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="CategoryScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="CategoryPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="FavCategoryBtn" Click="FavouritesBtn_Click" Text="{DynamicResource FavouriteStr}" Icon="{DynamicResource FavouriteIcon}" ToolTip="{DynamicResource FavToolStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ItemsControl x:Name="CategoriesPnl">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <ex:MenuButton Click="CategorySelectorBtns_Click" Tag="{Binding ID}" Text="{Binding Name}" Icon="{Binding Icon}" ContextMenu="{StaticResource CategoryMenu}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Separator x:Name="CategorySeparator" Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="AddCategoryBtn" Click="AddCategoryBtn_Click" Text="{DynamicResource AddCatStr}" Icon="{DynamicResource PlusIcon}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="CategoryScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="CategoryLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="CategoryRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <DockPanel x:Name="StatusBar" Margin="0" DockPanel.Dock="Bottom" Height="28" Background="{DynamicResource SecondaryColor}" VerticalAlignment="Bottom">
                    <ex:AppButton x:Name="NextPageStatusBtn" Click="NextPageBtn_Click" TextVisibility="Collapsed" DockPanel.Dock="Right" Background="Transparent" GapMargin="0" IconSize="20" Icon="{DynamicResource RightIcon}" CornerRadius="0" NoShadow="True" Margin="-15,0,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource NextPageStr}"/>
                    <TextBlock x:Name="PageStatusLbl" Text="{DynamicResource PageStr}" DockPanel.Dock="Right" Margin="5,0,20,0" VerticalAlignment="Center"/>
                    <ex:AppButton x:Name="PrevPageStatusBtn" Click="PrevPageBtn_Click" TextVisibility="Collapsed" DockPanel.Dock="Right" Background="Transparent" GapMargin="0" IconSize="20" Icon="{DynamicResource LeftIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource PrevPageStr}"/>
                    <ex:AppButton x:Name="TopBtn" Click="TopBtn_Click" Text="{DynamicResource FnTopStr}" FontSize="12" Background="Transparent" IconSize="20" Icon="{DynamicResource UpIcon}" CornerRadius="0" NoShadow="True" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" DockPanel.Dock="Right" GapMargin="5,0,0,0"/>

                    <ex:AppButton x:Name="NotificationsBtn" Click="NotificationsBtn_Click" TextVisibility="Collapsed" Background="Transparent" GapMargin="0" IconSize="20" Icon="{DynamicResource NotificationIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource NotificationStr}"/>
                    <ex:AppButton x:Name="RefreshBtn" Click="RefreshBtn_Click" Text="{DynamicResource RefreshTxtStr}" FontSize="12" Background="Transparent" IconSize="20" Icon="{DynamicResource RotateLeftIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" ToolTip="{DynamicResource RefreshFontsStr}" GapMargin="5,0,0,0"/>
                    <TextBlock x:Name="StatusLbl" Text="Font Express" Margin="5,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                </DockPanel>
                <Rectangle Fill="{DynamicResource AppColor}" Height="2" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Margin="0"/>
            </DockPanel>
        </Grid>

        <Rectangle x:Name="MainRect" Height="30" VerticalAlignment="Top" Fill="{DynamicResource AppColor}"/>
        <DockPanel Height="30" Margin="0" VerticalAlignment="Top">
            <ex:AppButton x:Name="CloseBtn" IsCloseBtn="True" Background="Transparent" Icon="{DynamicResource CloseWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource CloseStr}"/>
            <ex:AppButton x:Name="MaxBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MaxWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MaxStr}"/>
            <ex:AppButton x:Name="MinBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MinWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MinStr}"/>
            <ex:AppButton x:Name="HelpBtn" Click="HelpBtn_Click" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource HelpWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource HelpStr}"/>

            <ex:AppButton x:Name="AppLogoBtn" HasNoEffects="True" Focusable="False" Background="Transparent" Icon="{DynamicResource AppWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="20" Height="30" Padding="6,0,0,0" TextVisibility="Collapsed"/>
            <RadioButton x:Name="MenuBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource MenuStr}" GroupName="MainTabs"/>
            <Separator x:Name="MenuSeparator" Style="{StaticResource VerticalSeparator}" Background="White" Width="18" Margin="-8,0"/>
            <RadioButton x:Name="HomeBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource HomeStr}" GroupName="MainTabs" IsChecked="True"/>
            <RadioButton x:Name="ViewBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource ViewMStr}" GroupName="MainTabs"/>
            <RadioButton x:Name="CategoryBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource CategoryStr}" GroupName="MainTabs"/>

            <ex:AppButton x:Name="TitleBtn" Text="{Binding Title, ElementName=Main}" HasNoEffects="True" TextAlign="Right" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Foreground="White" FontSize="12" GapMargin="0" Background="Transparent" NoShadow="True" CornerRadius="0" IconVisibility="Collapsed" Height="30" Padding="7,0"/>
        </DockPanel>
        <Popup x:Name="NotificationsPopup" UseLayoutRounding="True" Placement="Top" PlacementTarget="{Binding ElementName=NotificationsBtn}" AllowsTransparency="True" PopupAnimation="Slide" StaysOpen="False">
            <Grid Height="160" Width="360">
                <ContentControl Content="{StaticResource PopupShadow}" Focusable="False"/>
                <Border Margin="10" CornerRadius="5" Background="{DynamicResource SecondaryColor}">
                    <ex:ClippedBorder CornerRadius="5">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel x:Name="NotificationsStack" Margin="0">
                                <Label x:Name="NotificationsHeaderLbl" FontWeight="SemiBold" VerticalAlignment="Top" Height="45" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,5" FontSize="15" Content="{DynamicResource NotificationStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}"/>
                                <Label x:Name="NotificationLoading" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="{DynamicResource PleaseWaitStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14"/>
                                <Label x:Name="NotificationsTxt" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="No notifications." Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14" Visibility="Collapsed"/>
                                <StackPanel x:Name="NotifyBtnStack" Orientation="Horizontal" HorizontalAlignment="Left" Margin="20,20,0,0" Visibility="Collapsed">
                                    <ex:AppButton x:Name="UpdateBtn" Click="UpdateBtn_Click" Icon="{DynamicResource DownloadIcon}" Text="{DynamicResource UpdateStr}" FontWeight="SemiBold" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                    <ex:AppButton x:Name="UpdateInfoBtn" Click="UpdateInfoBtn_Click" Icon="{DynamicResource HelpIcon}" Text="{DynamicResource FindOutMoreStr}" Margin="10,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </ex:ClippedBorder>
                </Border>
            </Grid>
        </Popup>
        <Popup x:Name="CategorySelectorPopup" PlacementTarget="{Binding ElementName=CategorySelectorBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer MaxHeight="500" MaxWidth="500">
                <StackPanel Margin="0">
                    <ItemsControl x:Name="CategorySelectorItems">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppButton Click="CategorySelectorBtns_Click" Tag="{Binding ID}" Text="{Binding Name}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{Binding SecondaryIcon}" NoShadow="True" Background="Transparent"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock x:Name="NoCategoriesSelectorLbl" Visibility="Collapsed" MaxWidth="200" Text="{DynamicResource NoCategoriesStr}" FontSize="14" Margin="30" HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" TextWrapping="Wrap"/>
                    <Rectangle Fill="{DynamicResource AppColor}" Height="2"/>
                    <ex:AppButton x:Name="AddCategoryPopupSelectorBtn" Click="AddCategoryBtn_Click" Text="{DynamicResource AddCatStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PlusIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="CategoryPopup" Closed="CategoryPopup_Closed" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer MinWidth="170" MaxWidth="500" MaxHeight="300">
                <StackPanel Margin="0">
                    <ItemsControl x:Name="CategoryPopupItems">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppCheckBox Click="CategoryCheckBtns_Click" Tag="{Binding ID}" Content="{Binding Name}" CornerRadius="0" IsChecked="{Binding Selected}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock x:Name="NoCategoriesLbl" Visibility="Collapsed" MaxWidth="200" Text="{DynamicResource NoCategoriesStr}" FontSize="14" Margin="30" HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" TextWrapping="Wrap"/>
                    <Rectangle Fill="{DynamicResource AppColor}" Height="2" Margin="0,5,0,0"/>
                    <ex:AppButton x:Name="AddCategoryPopupBtn" Click="AddCategoryBtn_Click" Text="{DynamicResource AddCatStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PlusIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="AlphaPopup" PlacementTarget="{Binding ElementName=AlphaBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer MaxWidth="500">
                <ItemsControl x:Name="AlphaItems">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ex:AppButton Click="AlphaBtns_Click" Text="{Binding}" HorizontalContentAlignment="Stretch" GapMargin="0" CornerRadius="0" IconVisibility="Collapsed" NoShadow="True" Background="Transparent"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="FontSizePopup" VerticalOffset="5" PlacementTarget="{Binding ElementName=FontSizeTxt}"  Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <Grid Margin="10">
                    <Slider x:Name="FontSizeSlider" ValueChanged="FontSizeSlider_ValueChanged" Style="{StaticResource SimpleSlider}" Maximum="100" Minimum="1" IsSnapToTickEnabled="True" SmallChange="1" Width="180" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Value="24" HorizontalAlignment="Center"/>
                </Grid>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="PreviewTextPopup" PlacementTarget="{Binding ElementName=PreviewTextBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer MaxHeight="500" MaxWidth="500">
                <StackPanel Margin="0">
                    <ItemsControl x:Name="PreviewTextItems">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppRadioButton Click="PreviewTextBtns_Click" Tag="{Binding ID}" Content="{Binding Name}" IsChecked="{Binding Path=Selected, Mode=OneWay}" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="PreviewTextOptions"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ex:AppTextBox x:Name="CustomPreviewTxt" TextChanged="CustomPreviewTxt_TextChanged" Margin="44,0,10,10" Width="150" FontSize="12" Padding="2" MinLines="1" MaxLines="4" TextWrapping="Wrap" AcceptsReturn="False"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="PagePopup" PlacementTarget="{Binding ElementName=PerPageBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppRadioButton x:Name="Page10Radio" Click="PerPageOptionBtns_Click" Tag="10" Content="10" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="PerPageOptions"/>
                    <ex:AppRadioButton x:Name="Page25Radio" Click="PerPageOptionBtns_Click" Tag="25" Content="25" IsChecked="True" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="PerPageOptions"/>
                    <ex:AppRadioButton x:Name="Page50Radio" Click="PerPageOptionBtns_Click" Tag="50" Content="50" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="PerPageOptions"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="HelpPopup" PlacementTarget="{Binding ElementName=HelpBtn}" Placement="Left" HorizontalOffset="10" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer Width="280" Background="{DynamicResource AppColor}" Margin="10,0,10,10">
                <DockPanel>
                    <TextBox x:Name="HelpSearchTxt" TextChanged="HelpSearchTxt_TextChanged" Margin="5,3" UseLayoutRounding="False" VerticalContentAlignment="Center" VerticalAlignment="Top" Height="24" UndoLimit="0" Padding="0" Foreground="{DynamicResource TextColor}" Background="{DynamicResource BackColor}" Template="{DynamicResource RoundedTextBox}" DockPanel.Dock="Top">
                        <TextBox.ContextMenu>
                            <ContextMenu Visibility="Collapsed"/>
                        </TextBox.ContextMenu>
                    </TextBox>
                    <StackPanel DockPanel.Dock="Top" Background="{DynamicResource SecondaryColor}">
                        <TextBlock x:Name="HelpInfoTxt" Text="{DynamicResource SearchHelpStr}" Margin="10,5" TextWrapping="Wrap"></TextBlock>
                        <ItemsControl x:Name="HelpTopicItems">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ex:AppButton Click="HelpTopicBtns_Click" Text="{Binding Name}" Tag="{Binding ID}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{Binding Icon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Rectangle Height="2" Fill="{DynamicResource AppColor}"></Rectangle>
                        <ex:AppButton x:Name="HelpLinkBtn" Click="HelpLinkBtn_Click" Text="{DynamicResource OnlineHelpStr}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource HelpIcon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                    </StackPanel>
                </DockPanel>
            </ex:PopupContainer>
        </Popup>
    </Grid>
</Window>
