<Window x:Class="Present_Express.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Present_Express"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ex="clr-namespace:ExpressControls;assembly=ExpressControls"
        xmlns:controls1="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        mc:Ignorable="d" xmlns:System="clr-namespace:System;assembly=mscorlib" x:Name="Main"
        Title="{DynamicResource TitlePStr}" Loaded="Main_Loaded" Closing="Main_Closing" Height="680" Width="1180" MinWidth="600" d:FontFamily="Inter" MinHeight="415" Style="{DynamicResource ChromeWindowStyle}">
    <Window.Resources>
        <SolidColorBrush x:Key="SlideBackColour" Color="White"/>
        <System:Double x:Key="ImageWidth">160</System:Double>
        <System:Double x:Key="ImageHeight">90</System:Double>
        <Stretch x:Key="FitStretch">Uniform</Stretch>
        <local:SlideListMarginConverter x:Key="SlideListMarginConverter"/>
        <local:SlideListBorderColorConverter x:Key="SlideListBorderColorConverter"/>
        <local:SlideListBorderThicknessConverter x:Key="SlideListBorderThicknessConverter"/>
        <local:FileButtonWidthConverter x:Key="FileButtonWidthConverter"/>
        <ContextMenu x:Key="SlideMenu" FontSize="14" Background="{DynamicResource SecondaryColor}" Style="{DynamicResource ExpressContextMenu}">
            <MenuItem Click="EditBtn_Click"  Header="{DynamicResource EditStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="DuplicateBtn_Click" Header="{DynamicResource DuplicateStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <Separator HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-20,5,10,5"/>
            <MenuItem Click="UpBtn_Click" Header="{DynamicResource MoveUpStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="TopBtn_Click" Header="{DynamicResource MoveToTopStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="DownBtn_Click" Header="{DynamicResource MoveDownStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="BottomBtn_Click" Header="{DynamicResource MoveToBottomStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <Separator HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-20,5,10,5"/>
            <MenuItem Click="RemoveBtn_Click" Header="{DynamicResource DeleteStr}" Style="{DynamicResource ExpressMenuItem}"/>
        </ContextMenu>
        
        <Storyboard x:Key="SideStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid4">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MenuPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HomeStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HomePnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DesignStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DesignPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ShowPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="NewOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="NewPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="NewOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="NewPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="NewOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="NewPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="OpenPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="OpenPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="OpenPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloudOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="CloudPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloudOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="CloudPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloudOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="CloudPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SaveOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SavePnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SaveOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SavePnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SaveOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SavePnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExportOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ExportPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExportOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ExportPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExportOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ExportPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="InfoOverlayInStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InfoPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,0,50,50"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="InfoOverlayResetStoryboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InfoPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0"/>
                <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="75,50,50,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="InfoOverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InfoPnl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="75,50,50,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="00:00:00.3000000" Value="75,0,50,50"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OverlayOutStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- Shortcuts -->
        <RoutedUICommand x:Key="RunCommand" Text="Run"></RoutedUICommand>
        <RoutedUICommand x:Key="DrawingCommand" Text="Drawing"></RoutedUICommand>
        <RoutedUICommand x:Key="ExportCommand" Text="Export"></RoutedUICommand>
        <RoutedUICommand x:Key="PictureCommand" Text="Picture"></RoutedUICommand>
        <RoutedUICommand x:Key="ScreenshotCommand" Text="Screenshot"></RoutedUICommand>
        <RoutedUICommand x:Key="ChartCommand" Text="Chart"></RoutedUICommand>
        <RoutedUICommand x:Key="TextCommand" Text="Text"></RoutedUICommand>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Help" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Properties" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource RunCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource DrawingCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ExportCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource PictureCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.New" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Print" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ScreenshotCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource ChartCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource TextCommand}" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.PrintPreview" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="F12" Command="ApplicationCommands.SaveAs" />
        <KeyBinding Key="F5" Command="{StaticResource RunCommand}" />
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{StaticResource DrawingCommand}" />
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{StaticResource ExportCommand}" />
        <KeyBinding Key="M" Modifiers="Ctrl" Command="{StaticResource PictureCommand}" />
        <KeyBinding Key="Q" Modifiers="Ctrl" Command="{StaticResource ScreenshotCommand}" />
        <KeyBinding Key="R" Modifiers="Ctrl" Command="{StaticResource ChartCommand}" />
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{StaticResource TextCommand}" />
    </Window.InputBindings>

    <Grid x:Name="WindowGrid">
        <Grid x:Name="grid1" Background="{DynamicResource TertiaryColor}">
            <DockPanel Margin="0">
                <TabControl x:Name="DocTabs" Margin="0,4,0,0" DockPanel.Dock="Top" Height="68" Padding="0" BorderThickness="0" SelectedIndex="1" Panel.ZIndex="1">
                    <TabControl.Effect>
                        <DropShadowEffect Direction="270" Color="Gray" Opacity="0.1" BlurRadius="10"/>
                    </TabControl.Effect>
                    <TabItem x:Name="MenuTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="MenuScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="MenuPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="NewBtn" Click="NewBtn_Click" Text="{DynamicResource NewStr}" Icon="{DynamicResource BlankIcon}" MoreVisibility="Visible"/>
                                    <ex:MenuButton x:Name="OpenBtn" Click="OpenBtn_Click" Text="{DynamicResource OpenStr}" Icon="{DynamicResource OpenIcon}" MoreVisibility="Visible"/>
                                    <ex:MenuButton x:Name="SaveBtn" Click="SaveBtn_Click" IsRSquared="True" Text="{DynamicResource SaveMStr}" Icon="{DynamicResource SaveIcon}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}" Margin="-12,0" Width="15"/>
                                    <ex:MenuButton x:Name="SaveAsBtn" Click="SaveAsBtn_Click" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" ToolTip="{DynamicResource SaveAsStr}" Padding="2,0,6,0" Height="32"/>
                                    <ex:MenuButton x:Name="PrintBtn" Click="PrintBtn_Click" IsRSquared="True" Text="{DynamicResource PrintMStr}" Icon="{DynamicResource PrintIcon}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}" Margin="-12,0" Width="15"/>
                                    <ex:MenuButton x:Name="PrintOptionsBtn" Click="PrintOptionsBtn_Click" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" ToolTip="{DynamicResource PrintOptionsStr}" Padding="2,0,6,0" Height="32"/>
                                    <ex:MenuButton x:Name="ExportBtn" Click="ExportBtn_Click" Text="{DynamicResource ExportMStr}" Icon="{DynamicResource ShareIcon}" MoreVisibility="Visible"/>
                                    <ex:MenuButton x:Name="OptionsBtn" Click="OptionsBtn_Click" Text="{DynamicResource OptionStr}" Icon="{DynamicResource GearsIcon}"/>
                                    <ex:MenuButton x:Name="InfoBtn" Click="InfoBtn_Click" Text="{DynamicResource InfoStr}" Icon="{DynamicResource InfoIcon}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="MenuScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="MenuLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="MenuRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="HomeTab" Header="TabItem" Focusable="False">
                        <Grid x:Name="grid2" Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="HomeScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="HomePnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="SlidesBtn" Click="SlidesBtn_Click" Text="{DynamicResource SlidesStr}" Icon="{DynamicResource PictureFileIcon}" ToolTip="{DynamicResource SlidesToolStr}"/>
                                    <ex:MenuButton x:Name="EditSlideBtn" Click="EditSlideBtn_Click" Text="Edit this slide" Icon="{DynamicResource EditIcon}" Visibility="Collapsed"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource NewSlideStr}" Padding="5,0"/>
                                    <ex:MenuButton x:Name="PictureBtn" Click="PictureBtn_Click" MoreVisibility="Visible" Text="{DynamicResource PictureStr}" Icon="{DynamicResource PictureIcon}" ToolTip="{DynamicResource PictureToolSlideshowStr}"/>
                                    <ex:MenuButton x:Name="TextBtn" Click="TextBtn_Click" Text="{DynamicResource TextStr}" Icon="{DynamicResource TextIcon}" ToolTip="{DynamicResource TextToolStr}"/>
                                    <ex:MenuButton x:Name="ScreenshotBtn" Click="ScreenshotBtn_Click" Text="{DynamicResource ScreenshotStr}" Icon="{DynamicResource ScreenshotIcon}" ToolTip="{DynamicResource ScreenshotToolStr}"/>
                                    <ex:MenuButton x:Name="ChartBtn" Click="ChartBtn_Click" Text="{DynamicResource ChartStr}" Icon="{DynamicResource ColumnChartIcon}" ToolTip="{DynamicResource ChartToolSlideshowStr}"/>
                                    <ex:MenuButton x:Name="DrawingsBtn" Click="DrawingsBtn_Click" Text="{DynamicResource DrawingStr}" Icon="{DynamicResource BallpointPenIcon}" ToolTip="{DynamicResource DrawingToolSlideshowStr}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="HomeScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="HomeLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="HomeRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="DesignTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="DesignScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="DesignPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="BackColourBtn" Click="BackColourBtn_Click" MoreVisibility="Visible" Text="{DynamicResource BackColorStr}" Icon="{DynamicResource ColoursIcon}" ToolTip="{DynamicResource BackColorToolStr}"/>
                                    <ex:MenuButton x:Name="TransitionBtn" Click="TransitionBtn_Click" MoreVisibility="Visible" Text="{DynamicResource TransitionStr}" Icon="{DynamicResource PaneIcon}" ToolTip="{DynamicResource TransitionToolStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="SlideSizeBtn" Click="SlideSizeBtn_Click" MoreVisibility="Visible" Text="{DynamicResource SlideSizeStr}" Icon="{DynamicResource ExpandIcon}"/>
                                    <ex:AppCheckBox x:Name="FitBtn" Click="FitBtn_Click" Content="{DynamicResource FitSlideStr}" ToolTip="{DynamicResource FitSlideToolStr}" IsChecked="True"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="{DynamicResource AdvanceAfterStr}" Padding="10,0,10,0"/>
                                    <xctk:DoubleUpDown x:Name="TimingUpDown" ValueChanged="TimingUpDown_ValueChanged" FontSize="14" Margin="0,0,5,0" Style="{DynamicResource ExpressDoubleUpDown}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="75" Text="2" Minimum="0.5" Maximum="25" Value="2" Height="28" DefaultValue="2" MaxLength="4" IsEnabled="False" DisplayDefaultValueOnEmptyText="True"/>
                                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="{DynamicResource SecsStr}" Padding="0,0,10,0"/>
                                    <ex:MenuButton x:Name="ApplyAllBtn" Click="ApplyAllBtn_Click" Text="{DynamicResource ApplyAllTimingsStr}" Icon="{DynamicResource CopyIcon}" ToolTip="{DynamicResource ApplyTimingsToolStr}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="DesignScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="DesignLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="DesignRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="ShowTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="ShowScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="ShowPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="RunBtn" Click="RunBtn_Click" IsRSquared="True" Text="{DynamicResource RunStr}" Icon="{DynamicResource PlayIcon}" ToolTip="{DynamicResource RunToolStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}" Margin="-12,0" Width="15"/>
                                    <ex:MenuButton x:Name="RunOptionsBtn" Click="RunOptionsBtn_Click" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" ToolTip="{DynamicResource RunOptionsStr}" Padding="2,0,6,0" Height="32"/>
                                    <ex:AppCheckBox x:Name="LoopBtn" Content="{DynamicResource LoopStr}" ToolTip="{DynamicResource LoopToolStr}" IsChecked="True"/>
                                    <ex:AppCheckBox x:Name="UseTimingsBtn" Content="{DynamicResource SlideTimingsStr}" ToolTip="{DynamicResource SlideTimingsToolStr}" IsChecked="True"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="MonitorBtn" Click="MonitorBtn_Click" Text="{DynamicResource ChooseMonitorStr}" Icon="{DynamicResource MonitorIcon}" ToolTip="{DynamicResource ChooseMonitorToolStr}" MoreVisibility="Visible"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="ShowScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="ShowLeftBtn" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="ShowRightBtn" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <DockPanel x:Name="StatusBar" Margin="0" DockPanel.Dock="Bottom" Height="28" Background="{DynamicResource SecondaryColor}" VerticalAlignment="Bottom">
                    <ex:AppButton x:Name="NotificationsBtn" Click="NotificationsBtn_Click" TextVisibility="Collapsed" Background="Transparent" GapMargin="0" IconSize="20" Icon="{DynamicResource NotificationIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource NotificationStr}"/>
                    <ex:AppButton x:Name="SaveStatusBtn" Click="SaveStatusBtn_Click" Background="Transparent" TextVisibility="Collapsed" GapMargin="0" IconSize="20" Icon="{DynamicResource SaveIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource SaveToolStr}"/>
                    <Button x:Name="SlideStatusBtn" Click="SlidesBtn_Click" VerticalAlignment="Top" Padding="0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalAlignment="Right" Background="Transparent" BorderBrush="{x:Null}" BorderThickness="0" Style="{DynamicResource AppButton}" Margin="0" ToolTip="{DynamicResource SlidesToolStr}">
                        <DockPanel Height="28">
                            <TextBlock x:Name="CountLbl" Text="{DynamicResource SlideCountStr}" Margin="15,0" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Button>
                    <TextBlock x:Name="StatusLbl" Text="Present Express" Margin="5,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                </DockPanel>
                <Rectangle Fill="{DynamicResource AppColor}" Height="2" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Margin="0"/>
                <Grid>
                    <DockPanel Panel.ZIndex="-2">
                        <Border x:Name="SideBarGrid" BorderBrush="{DynamicResource AppColor}" BorderThickness="0" HorizontalAlignment="Left" DockPanel.Dock="Right" Width="250" Margin="0">
                            <Grid x:Name="grid4" Background="{DynamicResource TertiaryColor}" Margin="10,10,0,0">
                                <ScrollViewer x:Name="SlideScroller" Margin="2,46,0,0">
                                    <ItemsControl x:Name="SlideStack" Margin="4,0,0,10" HorizontalAlignment="Stretch">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Click="SlideBtns_Click" Tag="{Binding ID}" Style="{DynamicResource AppButton}" ContextMenu="{StaticResource SlideMenu}" Background="Transparent" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0">
                                                    <DockPanel>
                                                        <TextBlock Text="{Binding ID}" FontSize="14" Margin="0,10,0,0" Width="40" Padding="8,0,0,0"/>
                                                        <Border CornerRadius="5" Margin="{Binding Path=Selected, Converter={StaticResource SlideListMarginConverter}}" BorderBrush="{Binding Path=Selected, Converter={StaticResource SlideListBorderColorConverter}}" BorderThickness="{Binding Path=Selected, Converter={StaticResource SlideListBorderThicknessConverter}}" Background="{DynamicResource SlideBackColour}" HorizontalAlignment="Left">
                                                            <ex:ClippedBorder CornerRadius="5" Height="{DynamicResource ImageHeight}" Width="{DynamicResource ImageWidth}">
                                                                <Image Source="{Binding Image}" Stretch="{DynamicResource FitStretch}"/>
                                                            </ex:ClippedBorder>
                                                        </Border>
                                                    </DockPanel>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                                <Grid Height="44" Margin="0,0,10,0" VerticalAlignment="Top" Background="{DynamicResource TertiaryColor}">
                                    <DockPanel>
                                        <ex:AppButton IconSize="14" x:Name="HideSideBarBtn" ToolTip="{DynamicResource ClosePaneStr}" DockPanel.Dock="Right" Background="{DynamicResource TertiaryColor}" TextVisibility="Collapsed" Icon="{DynamicResource CloseIcon}" Padding="5,0" Height="24" NoShadow="True" Margin="0"/>
                                        <TextBlock x:Name="SideHeaderLbl" Margin="15,0,0,0" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" Width="177.827" TextTrimming="CharacterEllipsis" Text="{DynamicResource SlidesStr}"/>
                                    </DockPanel>
                                    <Rectangle Fill="{DynamicResource TertiaryColor}" Height="2" VerticalAlignment="Top"/>
                                </Grid>
                            </Grid>
                        </Border>

                        <Grid>
                            <Grid x:Name="StartGrid">
                                <ContentControl Content="{DynamicResource PictureFileIcon}" Width="45" Margin="0,0,0,80" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock Text="{DynamicResource StartStr}" HorizontalAlignment="Center" FontWeight="Semibold" FontSize="24" VerticalAlignment="Center" Margin="0,20,0,0"/>
                                <TextBlock Text="{DynamicResource StartInfoStr}" HorizontalAlignment="Center" FontSize="14" VerticalAlignment="Center" Margin="30,80,30,0" TextWrapping="Wrap" TextAlignment="Center"/>
                            </Grid>
                            <Grid x:Name="SlideView" Margin="25" Visibility="Collapsed" Effect="{StaticResource DropShadowTop}">
                                <Viewbox Effect="{StaticResource DropShadowBottom}">
                                    <Grid x:Name="PhotoGrid" Background="{DynamicResource SlideBackColour}" Width="{DynamicResource ImageWidth}" Height="{DynamicResource ImageHeight}">
                                        <Image x:Name="PhotoImg" Stretch="{DynamicResource FitStretch}"/>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </Grid>
                    </DockPanel>

                    <Grid x:Name="OverlayGrid" Background="{DynamicResource BackColor}" Panel.ZIndex="-1" ClipToBounds="True" Margin="0,0,0,-30">
                        <TabControl x:Name="MenuTabs" Margin="-40,0,0,0" Padding="0" BorderThickness="0" TabStripPlacement="Left">
                            <TabItem x:Name="NewOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="NewPnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top">
                                                <ex:AppButton x:Name="NewOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource OnlineTemplateTxtStr}"/>
                                            </DockPanel>

                                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,15">
                                                <RadioButton x:Name="AllTemplatesBtn" Click="TemplateFilterBtns_Click" Tag="All" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource AllTemplatesStr}" GroupName="TemplateRadios" IsChecked="True"/>
                                                <RadioButton x:Name="PersonalTemplatesBtn" Click="TemplateFilterBtns_Click" Tag="Personal" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource PersonalStr}" GroupName="TemplateRadios"/>
                                                <RadioButton x:Name="BusinessTemplatesBtn" Click="TemplateFilterBtns_Click" Tag="Business" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource BusinessStr}" GroupName="TemplateRadios"/>
                                                <RadioButton x:Name="AlbumsTemplatesBtn" Click="TemplateFilterBtns_Click" Tag="Albums" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource AlbumsStr}" GroupName="TemplateRadios"/>
                                            </StackPanel>
                                            <Border DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel>
                                                    <DockPanel x:Name="TemplateLoadingGrid" Margin="10">
                                                        <ContentControl Content="{DynamicResource PictureFileIcon}" Focusable="False" Height="40"/>
                                                        <StackPanel VerticalAlignment="Center" Margin="15,0,5,0">
                                                            <TextBlock Margin="0" FontWeight="SemiBold" FontSize="16" TextWrapping="Wrap" Text="{DynamicResource TemplateLoadingStr}"/>
                                                            <TextBlock Text="{DynamicResource LoaderSubtitleStr}" FontSize="14" TextWrapping="Wrap" Margin="0,3,0,0"/>
                                                        </StackPanel>
                                                    </DockPanel>

                                                    <StackPanel x:Name="NoTemplateGrid" VerticalAlignment="Center" Margin="5" Visibility="Collapsed">
                                                        <TextBlock Text="{DynamicResource NoTemplatesStr}" FontSize="14" TextWrapping="Wrap" Margin="0"/>
                                                        <ex:AppButton x:Name="RefreshTemplatesBtn" Click="RefreshTemplatesBtn_Click" Icon="{DynamicResource RotateRightIcon}" Text="{DynamicResource ReloadStr}" Margin="0,15,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                                    </StackPanel>

                                                    <ItemsControl x:Name="TemplateGrid" HorizontalAlignment="Left" Margin="0">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <controls1:VirtualizingWrapPanel/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <ex:CardButton Click="TemplateBtns_Click" ImageSource="{Binding Image}" Text="{Binding Name}" ToolTip="{Binding Name}" Tag="{Binding File}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem x:Name="OpenOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="OpenPnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top">
                                                <ex:AppButton x:Name="OpenOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource OpenStr}"/>
                                            </DockPanel>

                                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,15">
                                                <RadioButton x:Name="RecentsTabBtn" Click="OpenTabBtns_Click" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource RecentFilesStr}" GroupName="OpenRadios" IsChecked="True"/>
                                                <RadioButton x:Name="FavouritesTabBtn" Click="OpenTabBtns_Click" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource FavouritesStr}" GroupName="OpenRadios"/>
                                            </StackPanel>
                                            <Border DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel x:Name="RecentFilesGrid" VerticalAlignment="Center" Margin="5" Visibility="Collapsed">
                                                        <TextBlock x:Name="NoRecentsTxt" Text="{DynamicResource NoRecentStr}" FontSize="14" TextWrapping="Wrap" Margin="0"/>
                                                        <ex:AppButton x:Name="ClearRecentsBtn" Click="ClearRecentsBtn_Click" Icon="{DynamicResource CrossIcon}" Text="{DynamicResource ClearListStr}" Margin="0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                    </StackPanel>

                                                    <StackPanel x:Name="FavFilesGrid" VerticalAlignment="Center" Margin="5" Visibility="Collapsed">
                                                        <TextBlock x:Name="NoFavouritesTxt" Text="{DynamicResource NoFavouriteFilesStr}" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <WrapPanel Margin="0,-10,0,0">
                                                            <ex:AppButton x:Name="AddFavouritesBtn" Click="AddFavouritesBtn_Click" FontWeight="SemiBold" Icon="{DynamicResource AddIcon}" Text="{DynamicResource AddFavouriteStr}"  Margin="0,10,10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppButton x:Name="ClearFavouritesBtn" Click="ClearFavouritesBtn_Click" Icon="{DynamicResource CrossIcon}" Text="{DynamicResource ClearListStr}" Margin="0,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                        </WrapPanel>
                                                    </StackPanel>

                                                    <ItemsControl x:Name="OpenFilesGrid" HorizontalAlignment="Stretch" Margin="0,15,0,0">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <ex:ListItemButton Click="RecentFavBtns_Click" Icon="{Binding Icon}" Heading="{Binding FileName}" Text="{Binding FilePathFormatted}" ToolTip="{Binding FilePath}">
                                                                    <ex:ListItemButton.ContextMenu>
                                                                        <ContextMenu Style="{DynamicResource SimpleContextMenu}">
                                                                            <MenuItem Tag="{Binding FilePath}" Click="OpenFileBtn_Click" Header="{DynamicResource OpenCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="OpenFileLocationBtn_Click" Header="{DynamicResource OpenLocationCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="CopyFilePathBtn_Click" Header="{DynamicResource CopyPathCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="RemoveFileBtn_Click" Header="{DynamicResource RemoveFileCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                        </ContextMenu>
                                                                    </ex:ListItemButton.ContextMenu>
                                                                </ex:ListItemButton>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem x:Name="CloudOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="CloudPnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top">
                                                <ex:AppButton x:Name="CloudOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock x:Name="CloudTitleLbl" Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource OpenDropboxStr}"/>
                                            </DockPanel>

                                            <Border DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel x:Name="ConnectDropboxGrid" VerticalAlignment="Center" Margin="5">
                                                        <TextBlock x:Name="DropboxInfoLbl" Text="{DynamicResource ConnectDropboxInfoStr}" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <TextBlock x:Name="DropboxDisconnectBtn" FontSize="14" Margin="0,-10,0,20"><Hyperlink Foreground="{DynamicResource AppLinkColor}" Click="DropboxDisconnectBtn_Click"><Run Text="{DynamicResource DisconnectDropboxStr}"/></Hyperlink></TextBlock>
                                                        <WrapPanel Margin="-10,-10,0,0">
                                                            <ex:AppButton x:Name="ConnectDropboxBtn" Click="ConnectDropboxBtn_Click" Icon="{DynamicResource GlobeIcon}" Text="{DynamicResource ConnectDropboxStr}" Margin="10,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppButton x:Name="DropboxTryAgainBtn" Click="DropboxTryAgainBtn_Click" Icon="{DynamicResource RotateRightIcon}" Text="{DynamicResource TryAgainActionStr}" Margin="10,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppTextBox x:Name="DropboxFilenameTxt" Margin="10,14,0,0" Watermark="{DynamicResource FilenameStr}" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                            <TextBlock x:Name="DropboxExtLbl" Text=".present" FontSize="14" TextWrapping="Wrap" Margin="10,11,15,0" VerticalAlignment="Center"/>
                                                            <ex:AppButton x:Name="DropboxSaveBtn" Click="DropboxSaveBtn_Click" Icon="{DynamicResource SaveIcon}" IconSize="18" Height="30" Text="{DynamicResource SaveCmStr}" FontWeight="SemiBold" Margin="10,12,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                        </WrapPanel>
                                                    </StackPanel>

                                                    <ItemsControl x:Name="CloudFilesPnl" HorizontalAlignment="Stretch" Margin="0,15,0,0" Visibility="Collapsed">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <ex:ListItemButton Click="CloudFileBtns_Click" Icon="{Binding Icon}" IsMultiline="False" Text="{Binding FileName}" ToolTip="{Binding FilePath}" Tag="{Binding IsFolder}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                    <TextBlock x:Name="CloudFilesInfoLbl" Text="{DynamicResource PleaseWaitStr}" FontSize="14" TextWrapping="Wrap" Margin="5,10,0,5"/>

                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem x:Name="SaveOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="SavePnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top">
                                                <ex:AppButton x:Name="SaveOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource PinnedTitleStr}"/>
                                            </DockPanel>

                                            <Border DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel VerticalAlignment="Center" Margin="5">
                                                        <TextBlock x:Name="NoPinnedTxt" Text="{DynamicResource NoPinnedFoldersStr}" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <WrapPanel Margin="0,-10,0,0">
                                                            <ex:AppButton x:Name="AddPinnedBtn" Click="AddPinnedBtn_Click" FontWeight="SemiBold" Icon="{DynamicResource AddIcon}" Text="{DynamicResource PinStr}"  Margin="0,10,10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppButton x:Name="ClearPinnedBtn" Click="ClearPinnedBtn_Click" Icon="{DynamicResource CrossIcon}" Text="{DynamicResource ClearListStr}" Margin="0,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                        </WrapPanel>
                                                    </StackPanel>

                                                    <ItemsControl x:Name="PinnedFoldersGrid" HorizontalAlignment="Stretch" Margin="0,15,0,0">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <ex:ListItemButton Click="PinnedBtns_Click" Icon="{Binding Icon}" Heading="{Binding FileName}" Text="{Binding FilePathFormatted}" ToolTip="{Binding FilePath}">
                                                                    <ex:ListItemButton.ContextMenu>
                                                                        <ContextMenu Style="{DynamicResource SimpleContextMenu}">
                                                                            <MenuItem Tag="{Binding FilePath}" Click="SaveFileBtn_Click" Header="{DynamicResource SaveCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="OpenFileExplorerBtn_Click" Header="{DynamicResource OpenFileExplorerCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="CopyFilePathBtn_Click" Header="{DynamicResource CopyPathCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                            <MenuItem Tag="{Binding FilePath}" Click="RemovePinBtn_Click" Header="{DynamicResource RemoveFolderCmStr}" Style="{DynamicResource SimpleMenuItem}"/>
                                                                        </ContextMenu>
                                                                    </ex:ListItemButton.ContextMenu>
                                                                </ex:ListItemButton>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem x:Name="ExportOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="ExportPnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top">
                                                <ex:AppButton x:Name="ExportOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource ExportMStr}"/>
                                            </DockPanel>

                                            <Border x:Name="ExportLoadingPnl" Visibility="Collapsed" DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <DockPanel Margin="10">
                                                        <ContentControl Content="{DynamicResource ExportIcon}" Focusable="False" Height="40"/>
                                                        <StackPanel VerticalAlignment="Center" Margin="15,0,5,0">
                                                            <TextBlock Margin="0" FontWeight="SemiBold" FontSize="16" TextWrapping="Wrap" Text="{DynamicResource ExportProgressStr}"/>
                                                            <TextBlock x:Name="ExportLoadingLbl" Text="{DynamicResource PleaseWaitStr}" FontSize="14" TextWrapping="Wrap" Margin="0,3,0,0"/>
                                                        </StackPanel>
                                                    </DockPanel>
                                                    <ex:AppButton x:Name="ExportCancelBtn" Click="ExportCancelBtn_Click" Icon="{DynamicResource CrossIcon}" Text="{DynamicResource CancelStr}" IconSize="20" Height="32" Margin="10,25,0,10" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                </StackPanel>
                                            </Border>
                                            
                                            <StackPanel x:Name="ExportTabPnl" DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,15">
                                                <RadioButton x:Name="VideoTabBtn" Click="VideoTabBtn_Click" Style="{DynamicResource ExpressButtonTab}" Content="{DynamicResource VideoStr}" GroupName="OpenRadios" IsChecked="True"/>
                                                <RadioButton x:Name="ImagesTabBtn" Click="ImagesTabBtn_Click" Style="{DynamicResource ExpressButtonTab}" Margin="5,0,0,0" Content="{DynamicResource ImagesStr}" GroupName="OpenRadios"/>
                                            </StackPanel>
                                            <Border x:Name="ExportMainPnl" DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,20,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel VerticalAlignment="Center" Margin="5">
                                                        <TextBlock x:Name="ExportIntroLbl" Text="{DynamicResource ExportVideoInfoStr}" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                            <TextBlock x:Name="ExportFormatLbl" Text="{DynamicResource FormatStr}" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                                            <ex:AppDropdown x:Name="ExportFormatCombo" Background="{DynamicResource BackColor}" DropdownBackground="{DynamicResource BackColor}" VerticalAlignment="Center" Height="30" Width="250"/>
                                                        </StackPanel>
                                                        <TextBlock Text="{DynamicResource ExportWhichSlidesStr}" FontSize="14" TextWrapping="Wrap" Margin="0,25,0,10"/>
                                                        <ex:AppRadioButton x:Name="ExportAllRadioBtn" Click="ExportSlideRadioBtns_Click" Tag="all" Content="{DynamicResource AllSlidesStr}" Margin="0,0,0,5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" IsChecked="True" GroupName="ExportSlideOptions" MinWidth="300"/>
                                                        <ex:AppRadioButton x:Name="ExportCurrentRadioBtn" Click="ExportSlideRadioBtns_Click" Tag="current" Content="{DynamicResource CurrentSlideStr}" Margin="0,0,0,5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" GroupName="ExportSlideOptions" MinWidth="300"/>
                                                        <ex:AppRadioButton x:Name="ExportCustomRadioBtn" Click="ExportSlideRadioBtns_Click" Tag="custom" Content="{DynamicResource CustomStr}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" GroupName="ExportSlideOptions" MinWidth="300"/>
                                                        <StackPanel x:Name="ExportSlidePnl" Orientation="Horizontal" Margin="45,5,0,0" IsEnabled="False">
                                                            <TextBlock Text="{DynamicResource FromSlideStr}" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                            <xctk:IntegerUpDown x:Name="SlideFromUpDown" Style="{DynamicResource ExpressIntegerUpDown}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="75" Minimum="1" Maximum="1" Value="1" Height="30"/>
                                                            <TextBlock Text="{DynamicResource ToSlideStr}" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Margin="10,0"/>
                                                            <xctk:IntegerUpDown x:Name="SlideToUpDown" Style="{DynamicResource ExpressIntegerUpDown}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="75" Minimum="1" Maximum="1" Value="1" Height="30"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                    <ex:AppCheckBox x:Name="ExportWithTimingsBtn" Click="ExportWithTimingsBtn_Click" Content="{DynamicResource SlideTimingsStr}" Margin="0,20,0,5" HorizontalContentAlignment="Stretch" HorizontalAlignment="Left" IsChecked="True" MinWidth="300"/>
                                                    <StackPanel x:Name="ExportTimingsPnl" Orientation="Horizontal" Margin="45,0,0,0">
                                                        <TextBlock Text="{DynamicResource SecondsPerSlideStr}" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                        <xctk:DoubleUpDown x:Name="SecondsPerSlideUpDown" Style="{DynamicResource ExpressDoubleUpDown}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="75" Minimum="0.5" Maximum="10" Value="2" Height="30" MaxLength="4"/>
                                                    </StackPanel>
                                                    <ex:AppButton x:Name="ExportSlideshowBtn" Click="ExportSlideshowBtn_Click" FontWeight="SemiBold" Icon="{DynamicResource ExportIcon}" Text="{DynamicResource ExportStr}" Margin="10,25,0,10" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                            <TabItem x:Name="InfoOverlayTab" Header="" Focusable="False">
                                <Grid Background="{DynamicResource BackColor}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <DockPanel x:Name="InfoPnl" Margin="75,50,50,0" LastChildFill="False" HorizontalAlignment="Stretch" MaxWidth="1500">
                                            <DockPanel DockPanel.Dock="Top" Margin="0,0,0,20">
                                                <ex:AppButton x:Name="InfoOverlayCloseBtn" DockPanel.Dock="Right" Icon="{DynamicResource CloseIcon}" TextVisibility="Collapsed" IconSize="18" Padding="5,0" VerticalAlignment="Center" Height="28" Margin="20,0,0,0"/>
                                                <TextBlock Margin="0" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" Text="{DynamicResource InfoStr}"/>
                                            </DockPanel>

                                            <Border x:Name="FileLocationPnl" DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,0,0,15" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel VerticalAlignment="Center" Margin="5">
                                                        <TextBlock Text="{DynamicResource FileLocationStr}" FontSize="16" FontWeight="SemiBold" TextWrapping="Wrap" Margin="0,0,0,5"/>
                                                        <TextBlock x:Name="FilenameTxt" Text="Filename" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <WrapPanel Margin="0,-10,0,0">
                                                            <ex:AppButton x:Name="CopyPathInfoBtn" Click="CopyPathInfoBtn_Click" Icon="{DynamicResource CopyIcon}" Text="{DynamicResource CopyInfoPathStr}"  Margin="0,10,10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppButton x:Name="OpenLocationBtn" Click="OpenLocationBtn_Click" Icon="{DynamicResource OpenIcon}" Text="{DynamicResource OpenInfoLocationStr}" Margin="0,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                        </WrapPanel>
                                                    </StackPanel>
                                                    <TextBlock Text="{DynamicResource ChooseFolderInfoStr}" FontSize="14" TextWrapping="Wrap" Margin="5,20,5,5"/>
                                                    <ItemsControl x:Name="InfoFileStack" Margin="5" HorizontalAlignment="Stretch">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <ex:AppButton Click="InfoBtns_Click" Text="{Binding FileName}" Padding="{Binding Indent}" ToolTip="{Binding FilePath}" Icon="{DynamicResource FolderIcon}" HorizontalContentAlignment="Stretch" NoShadow="True" Height="34" Background="{DynamicResource SecondaryColor}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </StackPanel>
                                            </Border>

                                            <Border x:Name="PropertiesPnl" DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,0,0,15" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel VerticalAlignment="Center" Margin="5">
                                                        <TextBlock Text="{DynamicResource PropertiesStr}" FontSize="16" FontWeight="SemiBold" TextWrapping="Wrap" Margin="0,0,0,10"/>
                                                        <StackPanel Orientation="Horizontal">
                                                            <StackPanel HorizontalAlignment="Left" Margin="0,0,25,0">
                                                                <TextBlock VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="{DynamicResource SizeStr}"/>
                                                                <TextBlock VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="{DynamicResource CreatedStr}"/>
                                                                <TextBlock VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="{DynamicResource ModifiedStr}"/>
                                                                <TextBlock VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="{DynamicResource AccessedStr}"/>
                                                                <TextBlock VerticalAlignment="Top" Margin="0" Padding="0" Text="{DynamicResource EditingStr}"/>
                                                            </StackPanel>
                                                            <StackPanel HorizontalAlignment="Left">
                                                                <TextBlock x:Name="FileSizeTxt" VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="Size"/>
                                                                <TextBlock x:Name="CreatedTxt" VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="Size"/>
                                                                <TextBlock x:Name="ModifiedTxt" VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="Size"/>
                                                                <TextBlock x:Name="AccessedTxt" VerticalAlignment="Top" Margin="0,0,0,5" Padding="0" Text="Size"/>
                                                                <TextBlock x:Name="EditingTimeTxt" VerticalAlignment="Top" Margin="0" Padding="0" Text="Size"/>
                                                            </StackPanel>
                                                        </StackPanel>
                                                        <ex:AppButton x:Name="CloseDocBtn" Click="CloseDocBtn_Click" Icon="{DynamicResource CrossIcon}" Text="{DynamicResource CloseDocStr}" IconSize="20" Height="32" Margin="0,20,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Border>

                                            <Border DockPanel.Dock="Top" UseLayoutRounding="True" Background="{DynamicResource SecondaryColor}" Padding="10" CornerRadius="10" VerticalAlignment="Top" Margin="0,0,0,40" HorizontalAlignment="Left">
                                                <StackPanel Width="{Binding ActualWidth, ElementName=OverlayGrid, Mode=OneWay, Converter={StaticResource FileButtonWidthConverter}}">
                                                    <StackPanel VerticalAlignment="Center" Margin="5">
                                                        <TextBlock Text="{DynamicResource AboutPresentStr}" FontSize="16" FontWeight="SemiBold" TextWrapping="Wrap" Margin="0,0,0,5"/>
                                                        <TextBlock Text="{DynamicResource ExpressAppsAdPStr}" FontSize="14" TextWrapping="Wrap" Margin="0,0,0,15"/>
                                                        <WrapPanel Margin="0,-10,0,0">
                                                            <ex:AppButton x:Name="AboutBtn" Click="AboutBtn_Click" Icon="{DynamicResource InfoIcon}" Text="{DynamicResource QtAboutStr}" Margin="0,10,10,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                            <ex:AppButton x:Name="ExpressWebBtn" Click="ExpressWebBtn_Click" Icon="{DynamicResource GlobeIcon}" Text="{DynamicResource WebsiteStr}" Margin="0,10,0,0" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"/>
                                                        </WrapPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Border>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>

        <Rectangle x:Name="MainRect" Height="30" VerticalAlignment="Top" Fill="{DynamicResource AppColor}"></Rectangle>
        <DockPanel Height="30" Margin="0" VerticalAlignment="Top">
            <ex:AppButton x:Name="CloseBtn" IsCloseBtn="True" Background="Transparent" Icon="{DynamicResource CloseWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource CloseStr}"/>
            <ex:AppButton x:Name="MaxBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MaxWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MaxStr}"/>
            <ex:AppButton x:Name="MinBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MinWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MinStr}"/>
            <ex:AppButton x:Name="HelpBtn" Click="HelpBtn_Click" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource HelpWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource HelpStr}"/>

            <ex:AppButton x:Name="AppLogoBtn" HasNoEffects="True" Focusable="False" Background="Transparent" Icon="{DynamicResource AppWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="20" Height="30" Padding="6,0,0,0" TextVisibility="Collapsed"/>
            <RadioButton x:Name="MenuBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource MenuStr}" GroupName="MainTabs"/>
            <Separator x:Name="MenuSeparator" Style="{StaticResource VerticalSeparator}" Background="White" Width="18" Margin="-8,0"/>
            <RadioButton x:Name="HomeBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource HomeStr}" GroupName="MainTabs" IsChecked="True"/>
            <RadioButton x:Name="DesignBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource DesignMStr}" GroupName="MainTabs"/>
            <RadioButton x:Name="ShowBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource ShowMStr}" GroupName="MainTabs"/>

            <ex:AppButton x:Name="TitleBtn" Text="{Binding Title, ElementName=Main}" HasNoEffects="True" TextAlign="Right" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Foreground="White" FontSize="12" GapMargin="0" Background="Transparent" NoShadow="True" CornerRadius="0" IconVisibility="Collapsed" Height="30" Padding="7,0"/>
        </DockPanel>

        <Grid x:Name="SlideshowGrid" Margin="0,30,0,0" Background="{DynamicResource BackColor}" Visibility="Collapsed">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0">
                <ContentControl Focusable="False" Margin="0" VerticalAlignment="Bottom" Panel.ZIndex="1" Content="{DynamicResource PauseIcon}" Height="40" Effect="{StaticResource DropShadowTop}"/>
                <ContentControl Focusable="False" Content="{DynamicResource MonitorIcon}" Margin="0,-64,0,0" Height="100" VerticalAlignment="Center"/>
                <TextBlock HorizontalAlignment="Center" Margin="0,20,0,0" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="{DynamicResource ProgressStr}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,40,0,0">
                    <ex:AppButton x:Name="SlideshowPrevBtn" GapMargin="0" Background="{DynamicResource BackColor}" Icon="{DynamicResource LeftIcon}" ToolTip="{DynamicResource PreviousStr}" TextVisibility="Collapsed" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,0"/>
                    <ex:AppButton x:Name="SlideshowNextBtn" GapMargin="0" Background="{DynamicResource BackColor}" Icon="{DynamicResource RightIcon}" ToolTip="{DynamicResource NextStr}" TextVisibility="Collapsed" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,0"/>
                    <ex:AppButton x:Name="SlideshowHomeBtn" GapMargin="0" Background="{DynamicResource BackColor}" Icon="{DynamicResource UndoIcon}" ToolTip="{DynamicResource BackToStartStr}" TextVisibility="Collapsed" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,0"/>
                    <ex:AppButton x:Name="SlideshowEndBtn" GapMargin="0" Background="{DynamicResource BackColor}" Icon="{DynamicResource CloseIcon}" ToolTip="{DynamicResource EndStr}" TextVisibility="Collapsed" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,0"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Popup x:Name="NotificationsPopup" UseLayoutRounding="True" Placement="Top" PlacementTarget="{Binding ElementName=NotificationsBtn}" AllowsTransparency="True" PopupAnimation="Slide" StaysOpen="False">
            <Grid Height="160" Width="360">
                <ContentControl Content="{StaticResource PopupShadow}" Focusable="False"/>
                <Border Margin="10" CornerRadius="5" Background="{DynamicResource SecondaryColor}">
                    <ex:ClippedBorder CornerRadius="5">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel x:Name="NotificationsStack" Margin="0">
                                <Label x:Name="NotificationsHeaderLbl" FontWeight="SemiBold" VerticalAlignment="Top" Height="45" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,5" FontSize="15" Content="{DynamicResource NotificationStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}"/>
                                <Label x:Name="NotificationLoading" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="{DynamicResource PleaseWaitStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14"/>
                                <Label x:Name="NotificationsTxt" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="No notifications." Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14" Visibility="Collapsed"/>
                                <StackPanel x:Name="NotifyBtnStack" Orientation="Horizontal" HorizontalAlignment="Left" Margin="20,20,0,0" Visibility="Collapsed">
                                    <ex:AppButton x:Name="UpdateBtn" Click="UpdateBtn_Click" Icon="{DynamicResource DownloadIcon}" Text="{DynamicResource UpdateStr}" FontWeight="SemiBold" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                    <ex:AppButton x:Name="UpdateInfoBtn" Click="UpdateInfoBtn_Click" Icon="{DynamicResource HelpIcon}" Text="{DynamicResource FindOutMoreStr}" Margin="10,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </ex:ClippedBorder>
                </Border>
            </Grid>
        </Popup>
        <Popup x:Name="NewPopup" PlacementTarget="{Binding ElementName=NewBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="BlankBtn" Click="BlankBtn_Click" Text="{DynamicResource BlankSlideshowStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource BlankIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="OnlineTempBtn" Click="OnlineTempBtn_Click" Text="{DynamicResource OnlineTemplateTxtStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource GlobeIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="OpenPopup" PlacementTarget="{Binding ElementName=OpenBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="RecentBtn" Click="RecentBtn_Click" Text="{DynamicResource RecentFilesStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource RecentIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="FavouritesBtn" Click="FavouritesBtn_Click" Text="{DynamicResource FavouritesStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource FavouriteIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="OnlineOpenBtn" Click="OnlineOpenBtn_Click" Text="{DynamicResource OpenDropboxStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource DownloadIcon}" NoShadow="True" Background="Transparent"/>
                    <Rectangle Fill="{DynamicResource AppColor}" Height="2"/>
                    <ex:AppButton x:Name="BrowseOpenBtn" Click="BrowseOpenBtn_Click" Text="{DynamicResource BrowsePCStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource OpenIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="SavePopup" PlacementTarget="{Binding ElementName=SaveBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="PinnedFoldersBtn" Click="PinnedFoldersBtn_Click" Text="{DynamicResource PinnedTitleStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource DocumentFolderIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="OnlineSaveBtn" Click="OnlineSaveBtn_Click" Text="{DynamicResource SaveDropboxStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource DownloadIcon}" NoShadow="True" Background="Transparent"/>
                    <Rectangle Fill="{DynamicResource AppColor}" Height="2"/>
                    <ex:AppButton x:Name="BrowseSaveBtn" Click="BrowseSaveBtn_Click" Text="{DynamicResource BrowsePCStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource OpenIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="PrintPopup" PlacementTarget="{Binding ElementName=PrintBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="PageSetupBtn" Click="PageSetupBtn_Click" Text="{DynamicResource PageSetupStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PageSetupIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="PrintPreviewBtn" Click="PrintPreviewBtn_Click" Text="{DynamicResource PrintPreviewStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource EyeIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="ExportPopup" PlacementTarget="{Binding ElementName=ExportBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="ExportVideoBtn" Click="ExportVideoBtn_Click" Text="{DynamicResource VideoStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource VideoIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="ExportImagesBtn" Click="ExportImagesBtn_Click" Text="{DynamicResource ImagesStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PictureIcon}" NoShadow="True" Background="Transparent"/>
                    <Rectangle Fill="{DynamicResource AppColor}" Height="2"/>
                    <ex:AppButton x:Name="HTMLBtn" Click="HTMLBtn_Click" Text="{DynamicResource HTMLStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource HtmlIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="InfoPopup" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer MaxHeight="270">
                <StackPanel Margin="10">
                    <TextBlock x:Name="NoInfoFilesTxt" Text="{DynamicResource NoFilesToOpenStr}" FontSize="14" TextWrapping="Wrap" Margin="20,10"/>
                    <ItemsControl x:Name="InfoStack" HorizontalAlignment="Stretch">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Stretch"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppButton Click="InfoFileBtns_Click" Text="{Binding FileName}" ToolTip="{Binding FilePath}" Icon="{DynamicResource DocumentFileIcon}" HorizontalContentAlignment="Stretch" NoShadow="True" Height="34" Background="{DynamicResource SecondaryColor}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="PicturePopup" PlacementTarget="{Binding ElementName=PictureBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="OnlinePicturesBtn" Click="OnlinePicturesBtn_Click" Text="{DynamicResource OnlinePicturesPStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource GlobeIcon}" NoShadow="True" Background="Transparent" ToolTip="{DynamicResource OnlinePicturesToolVariantStr}"/>
                    <ex:AppButton x:Name="OfflinePicturesBtn" Click="OfflinePicturesBtn_Click" Text="{DynamicResource BrowsePCImagesStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource ImageFolderIcon}" NoShadow="True" Background="Transparent" ToolTip="{DynamicResource BrowsePCImagesToolStr}"/>
                    <Rectangle x:Name="PhotoEditorSeparator" Fill="{DynamicResource AppColor}" Height="2"/>
                    <ex:AppButton x:Name="PhotoEditorBtn" Click="PhotoEditorBtn_Click" Text="{DynamicResource PhotoEditorStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource EditIcon}" NoShadow="True" Background="Transparent" ToolTip="{DynamicResource PhotoEditorToolStr}"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="BackgroundPopup" PlacementTarget="{Binding ElementName=BackColourBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <TextBlock Margin="0" Padding="15,15,15,10" FontSize="14" Text="{DynamicResource StandardColourStr}"/>
                    <ItemsControl x:Name="BackColourItems" Width="100" Margin="15,0" HorizontalAlignment="Left">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls1:VirtualizingWrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Click="BackColourBtns_Click" Tag="{Binding Colour}" VerticalAlignment="Top" Padding="0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalAlignment="Left" Background="Transparent" BorderBrush="{x:Null}" BorderThickness="0" Style="{DynamicResource AppButton}" Margin="0" Height="25" ToolTip="{Binding Name}">
                                    <StackPanel Orientation="Horizontal" Height="25">
                                        <Rectangle RadiusX="5" RadiusY="5" Width="21" Fill="{Binding Colour}" Margin="2,0" Height="21" Stroke="#FFABADB3"/>
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock Margin="0" Padding="15,20,15,10" FontSize="14" Text="{DynamicResource CustomColourStr}"/>
                    <DockPanel Margin="15,0,15,10" Height="35">
                        <ex:AppButton x:Name="ApplyColourBtn" Click="ApplyColourBtn_Click" Icon="{DynamicResource RightIcon}" TextVisibility="Collapsed" GapMargin="0" IconSize="18" VerticalAlignment="Top" Height="26" Padding="5,0,4,0" DockPanel.Dock="Right" ToolTip="{DynamicResource ApplyColourStr}" Margin="6,0,0,0"/>
                        <xctk:ColorPicker x:Name="BackColourPicker" Style="{StaticResource ExpressColorPicker}" DisplayColorAndName="False" Height="26" Width="90" VerticalAlignment="Top" HorizontalAlignment="Left" SelectedColor="Red"/>
                    </DockPanel>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="TransitionPopup" PlacementTarget="{Binding ElementName=TransitionBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <TextBlock Margin="0" Padding="15,15,15,10" FontSize="14" Text="{DynamicResource TransitionStr}"/>
                    <ex:AppDropdown x:Name="TransitionCombo" SelectionChanged="TransitionCombo_SelectionChanged" DropdownBackground="{DynamicResource BackColor}" VerticalAlignment="Center" Height="30" MinWidth="150" Margin="15,0,15,0" HorizontalAlignment="Stretch"/>
                    <StackPanel x:Name="TransitionOptionsPnl">
                        <TextBlock Margin="0" Padding="15,15,15,10" FontSize="14" Text="{DynamicResource EffectOptionsStr}"/>
                        <ex:AppDropdown x:Name="TransitionOptionsCombo" SelectionChanged="TransitionOptionsCombo_SelectionChanged" DropdownBackground="{DynamicResource BackColor}" VerticalAlignment="Center" Height="30" MinWidth="150" Margin="15,0,15,0" HorizontalAlignment="Stretch"/>
                        <TextBlock Margin="0" Padding="15,15,15,10" FontSize="14" Text="{DynamicResource DurationStr}"/>
                        <DockPanel>
                            <xctk:DoubleUpDown x:Name="TransitionDurationUpDown" ValueChanged="TransitionDurationUpDown_ValueChanged" FontSize="14" Margin="15,0,5,0" Style="{DynamicResource ExpressDoubleUpDown}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="75" Text="1" Minimum="0.1" Maximum="10" Value="1" Height="28" DefaultValue="1" MaxLength="4" DisplayDefaultValueOnEmptyText="True"/>
                            <TextBlock VerticalAlignment="Center" FontSize="14" Text="{DynamicResource SecsStr}" Padding="0,0,15,0"/>
                        </DockPanel>
                    </StackPanel>
                    <ex:AppButton x:Name="TransitionApplyAllBtn" Click="TransitionApplyAllBtn_Click" Background="{DynamicResource BackColor}" Icon="{DynamicResource CopyIcon}" Text="{DynamicResource ApplyAllTimingsStr}" IconSize="20" Height="32" Margin="15,20,15,15" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="SlideSizePopup" PlacementTarget="{Binding ElementName=SlideSizeBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppRadioButton x:Name="WideBtn" Click="SlideSizeBtns_Click" Content="16:9" ToolTip="{DynamicResource WidescreenStr}" CornerRadius="0" HorizontalContentAlignment="Stretch" IsChecked="True" GroupName="SlideSizeOptions"/>
                    <ex:AppRadioButton x:Name="StandardBtn" Click="SlideSizeBtns_Click" Content="4:3" ToolTip="{DynamicResource StandardScreenStr}" CornerRadius="0" HorizontalContentAlignment="Stretch" GroupName="SlideSizeOptions"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="RunPopup" PlacementTarget="{Binding ElementName=RunBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ex:AppButton x:Name="RunBeginningBtn" Click="RunBtn_Click" Text="{DynamicResource RunBeginningStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PlayIcon}" NoShadow="True" Background="Transparent"/>
                    <ex:AppButton x:Name="RunCurrentSlideBtn" Click="RunCurrentSlideBtn_Click" Text="{DynamicResource RunCurrentSlideStr}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource PictureIcon}" NoShadow="True" Background="Transparent"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="MonitorPopup" PlacementTarget="{Binding ElementName=MonitorBtn}" VerticalOffset="5" Style="{DynamicResource ExpressPopup}">
            <ex:PopupContainer>
                <ItemsControl x:Name="MonitorPnl" Margin="0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ex:AppRadioButton Click="MonitorBtns_Click" Content="{Binding Name}" Tag="{Binding ID}" CornerRadius="0" HorizontalContentAlignment="Stretch" IsChecked="{Binding Selected}" GroupName="DisplayMonitorOptions"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="HelpPopup" PlacementTarget="{Binding ElementName=HelpBtn}" Placement="Left" HorizontalOffset="10" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer Width="280" Background="{DynamicResource AppColor}" Margin="10,0,10,10">
                <DockPanel>
                    <TextBox x:Name="HelpSearchTxt" TextChanged="HelpSearchTxt_TextChanged" Margin="5,3" UseLayoutRounding="False" VerticalContentAlignment="Center" VerticalAlignment="Top" Height="24" UndoLimit="0" Padding="0" Foreground="{DynamicResource TextColor}" Background="{DynamicResource BackColor}" Template="{DynamicResource RoundedTextBox}" DockPanel.Dock="Top">
                        <TextBox.ContextMenu>
                            <ContextMenu Visibility="Collapsed"/>
                        </TextBox.ContextMenu>
                    </TextBox>
                    <StackPanel DockPanel.Dock="Top" Background="{DynamicResource SecondaryColor}">
                        <TextBlock x:Name="HelpInfoTxt" Text="{DynamicResource SearchHelpStr}" Margin="10,5" TextWrapping="Wrap"></TextBlock>
                        <ItemsControl x:Name="HelpTopicItems">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ex:AppButton Click="HelpTopicBtns_Click" Text="{Binding Name}" Tag="{Binding ID}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{Binding Icon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Rectangle Height="2" Fill="{DynamicResource AppColor}"></Rectangle>
                        <ex:AppButton x:Name="HelpLinkBtn" Click="HelpLinkBtn_Click" Text="{DynamicResource OnlineHelpStr}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource HelpIcon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                    </StackPanel>
                </DockPanel>
            </ex:PopupContainer>
        </Popup>
    </Grid>
</Window>
