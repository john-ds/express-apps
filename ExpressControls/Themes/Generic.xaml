<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:ExpressControls">

    <Style x:Key="FocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{DynamicResource AppColor}"
                            BorderThickness="2"
                            CornerRadius="5"
                            Margin="0"
                            Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:MenuButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="6,0"/>
        <Setter Property="MoreVisibility" Value="Collapsed"/>
        <Setter Property="IsUpFacingMenu" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            CornerRadius="5"
                            Height="{TemplateBinding Height}"
                            x:Name="border">

                        <Border Background="Transparent"
                                CornerRadius="5"
                                UseLayoutRounding="True"
                                x:Name="borderInner">

                            <StackPanel Orientation="Horizontal"
                                    Margin="{TemplateBinding Padding}"
                                    x:Name="stack">

                                <ContentControl Content="{TemplateBinding Icon}"
                                            Focusable="False"
                                            Margin="0,4,0,4"
                                            Width="24"
                                            Height="24"
                                            x:Name="contp"/>

                                <TextBlock Text="{TemplateBinding Text}"
                                       Foreground="{DynamicResource TextColor}"
                                       Visibility="{TemplateBinding TextVisibility}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="5,0,2,1"
                                       FontSize="14"
                                       x:Name="txt"/>

                                <ContentControl Content="{DynamicResource DownIcon}"
                                            Visibility="{TemplateBinding MoreVisibility}"
                                            Focusable="False"
                                            Margin="4,0,0,0"
                                            Width="12"
                                            Height="12"
                                            x:Name="morebtn"/>
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMini" Value="True">
                            <Setter Property="Width" TargetName="contp" Value="12"/>
                            <Setter Property="Height" TargetName="contp" Value="12"/>
                            <Setter Property="Padding" Value="4,0"/>
                        </Trigger>
                        <Trigger Property="IsLSquared" Value="True">
                            <Setter Property="CornerRadius" TargetName="border" Value="0,5,5,0"/>
                            <Setter Property="CornerRadius" TargetName="borderInner" Value="0,5,5,0"/>
                        </Trigger>
                        <Trigger Property="IsRSquared" Value="True">
                            <Setter Property="CornerRadius" TargetName="border" Value="5,0,0,5"/>
                            <Setter Property="CornerRadius" TargetName="borderInner" Value="5,0,0,5"/>
                        </Trigger>
                        <Trigger Property="IsUpFacingMenu" Value="True">
                            <Setter Property="Content" TargetName="morebtn" Value="{DynamicResource UpIcon}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AppButton}">
        <Setter Property="Background" Value="{DynamicResource BackColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="GapMargin" Value="8,0,0,0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="NoShadow" Value="False"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="IconSize" Value="24"/>
        <Setter Property="MoreVisibility" Value="Collapsed"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextMargin" Value="2,0,2,1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="LastChildFill" Value="False"/>
        <Setter Property="Effect" Value="{DynamicResource DropShadowBottom}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            UseLayoutRounding="True"
                            x:Name="border"
                            Effect="{DynamicResource DropShadowTop}">

                        <Border Background="Transparent"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                UseLayoutRounding="True"
                                x:Name="borderInner">

                            <DockPanel Margin="{TemplateBinding Padding}"
                                   LastChildFill="{TemplateBinding LastChildFill}"
                                   x:Name="stack">

                                <ContentControl Content="{TemplateBinding Icon}"
                                            Visibility="{TemplateBinding IconVisibility}"
                                            Focusable="False"
                                            Margin="0,4,0,4"
                                            Width="{TemplateBinding IconSize}"
                                            Height="{TemplateBinding IconSize}"
                                            x:Name="contp"/>

                                <ContentControl Content="{DynamicResource DownIcon}"
                                            Visibility="{TemplateBinding MoreVisibility}"
                                            Focusable="False"
                                            Margin="4,0,0,0"
                                            Width="12"
                                            Height="12"
                                            DockPanel.Dock="Right"
                                            x:Name="morebtn"/>

                                <TextBlock Text="{TemplateBinding Text}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding TextVisibility}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="{TemplateBinding TextMargin}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="{TemplateBinding TextWrapping}"
                                       Padding="{TemplateBinding GapMargin}"
                                       FontSize="{TemplateBinding FontSize}"
                                       DockPanel.Dock="{TemplateBinding TextAlign}"
                                       x:Name="txt"/>

                            </DockPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInTitleBar" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppPressedColor}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInTitleBar" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="borderInner" Value="{DynamicResource AppPressedColor}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCloseBtn" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="borderInner" Value="#FF5050"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCloseBtn" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="borderInner" Value="#FF5050"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasNoEffects" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="borderInner" Value="Transparent"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="NoShadow" Value="True">
                            <Setter Property="Effect" TargetName="border" Value="{x:Null}"/>
                            <Setter Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsUpFacingMenu" Value="True">
                            <Setter Property="Content" TargetName="morebtn" Value="{DynamicResource UpIcon}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CardButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="227"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Text" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CardButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            CornerRadius="10"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            x:Name="border">

                        <DockPanel>
                            <TextBlock Text="{TemplateBinding Text}"
                                       DockPanel.Dock="Bottom"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Margin="15,0,15,10"
                                       FontSize="14"
                                       Padding="0"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap"
                                       x:Name="txt"/>

                            <ContentControl Focusable="False"
                                            Margin="10"
                                            Style="{DynamicResource RoundedShadowContainer}">

                                <local:ClippedBorder CornerRadius="10">
                                    <Image Stretch="Fill" Source="{TemplateBinding ImageSource}"/>
                                </local:ClippedBorder>
                            </ContentControl>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ListItemButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Icon" Value="{DynamicResource BlankIcon}"/>
        <Setter Property="IsMultiline" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Heading" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ListItemButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            CornerRadius="5"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            x:Name="border">

                        <DockPanel x:Name="dck" Margin="0,10" LastChildFill="False">
                            <ContentControl x:Name="icn" Focusable="False" Content="{TemplateBinding Icon}" Width="30" Margin="10,0,0,0" />

                            <TextBlock Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center"
                                       Margin="10,0,10,0"
                                       FontSize="14"
                                       Padding="0"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap"
                                       x:Name="txt">
                                
                                <Run x:Name="firstRun" FontWeight="SemiBold" Text="{TemplateBinding Heading}"/>
                                <LineBreak x:Name="lnBreak"/>
                                <Run x:Name="secondRun" FontSize="12" Text="{TemplateBinding Text}"/>

                            </TextBlock>

                            <TextBlock Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center"
                                       Margin="10,0,10,0"
                                       FontSize="14"
                                       Padding="0"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed"
                                       x:Name="txtSingle"
                                       Text="{TemplateBinding Text}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMultiline" Value="False">
                            <Setter Property="Visibility" TargetName="txtSingle" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="txt" Value="Collapsed"/>
                            <Setter Property="Width" TargetName="icn" Value="24"/>
                            <Setter Property="Margin" TargetName="dck" Value="0,5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AppCheckBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="GapMargin" Value="8,0,0,0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="IconSize" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Content" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppCheckBox}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Height="{TemplateBinding Height}"
                            x:Name="border">

                        <DockPanel Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   x:Name="stack">

                            <ContentControl Content="{DynamicResource UntickIcon}"
                                            Focusable="False"
                                            Margin="0,4,0,4"
                                            Width="{TemplateBinding IconSize}"
                                            Height="{TemplateBinding IconSize}"
                                            x:Name="contp"/>

                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="{DynamicResource TextColor}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="2,0,2,1"
                                       Padding="{TemplateBinding GapMargin}"
                                       FontSize="{TemplateBinding FontSize}"
                                       TextTrimming="CharacterEllipsis"
                                       TextAlignment="Left"
                                       x:Name="txt"/>
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="{DynamicResource TickIcon}" TargetName="contp"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AppRadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="GapMargin" Value="8,0,0,0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="IconSize" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Content" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppRadioButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Height="{TemplateBinding Height}"
                            x:Name="border">

                        <DockPanel Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   x:Name="stack">

                            <ContentControl Content="{DynamicResource CircleUntickIcon}"
                                            Focusable="False"
                                            Margin="0,4,0,4"
                                            Width="{TemplateBinding IconSize}"
                                            Height="{TemplateBinding IconSize}"
                                            x:Name="contp"/>

                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="{DynamicResource TextColor}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="2,0,2,1"
                                       Padding="{TemplateBinding GapMargin}"
                                       FontSize="{TemplateBinding FontSize}"
                                       TextTrimming="CharacterEllipsis"
                                       TextAlignment="Left"
                                       x:Name="txt"/>
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="{DynamicResource CircleTickIcon}" TargetName="contp"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AppPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="txt" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PopupContainer}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="DisableScrollbar" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopupContainer}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border Margin="10" CornerRadius="5" Background="{DynamicResource SecondaryColor}" Effect="{DynamicResource DropShadowTop}">
                            <Border CornerRadius="5" Background="{DynamicResource SecondaryColor}" Effect="{DynamicResource DropShadowBottom}"/>
                        </Border>
                        <Border Margin="{TemplateBinding ContentControl.Margin}" CornerRadius="5" Background="{TemplateBinding ContentControl.Background}">
                            <local:ClippedBorder CornerRadius="5">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="scrl">
                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                                </ScrollViewer>
                            </local:ClippedBorder>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="DisableScrollbar" Value="True">
                            <Setter Property="VerticalScrollBarVisibility" Value="Disabled" TargetName="scrl"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AppDropdown}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource BackColor}"/>
        <Setter Property="DropdownBackground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="IsUpFacingMenu" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppDropdown}">
                    <Grid>
                        <ToggleButton UseLayoutRounding="True" Template="{DynamicResource AppToggleButton}" Background="{TemplateBinding Background}" x:Name="ToggleButton" FocusVisualStyle="{StaticResource FocusStyle}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Release"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="10,5,25,5" x:Name="ContentSite" Focusable="False" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <local:PopupContainer Background="{TemplateBinding DropdownBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MaxWidth="500" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                            </local:PopupContainer>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDown"/>
                        </Trigger>
                        <Trigger Property="IsUpFacingMenu" Value="True">
                            <Setter Property="Template" Value="{DynamicResource AppToggleButtonUp}" TargetName="ToggleButton"/>
                            <Setter Property="Placement" Value="Top" TargetName="Popup"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style TargetType="{x:Type local:AppDropdownItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ShowColours" Value="False"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppDropdownItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="0"/>
                        <StackPanel>
                            <TextBlock Text="{TemplateBinding Content}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="10,5,10,5" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ItemsControl ItemsSource="{TemplateBinding Colours}" Focusable="False" Margin="10,0,10,5" Visibility="{TemplateBinding ShowColours, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="8" UseLayoutRounding="False"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle Fill="{Binding}" Height="5"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AppHoverColor}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AppPressedColor}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AppTextBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HasContextMenu" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource BackColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Gray1}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource Self}" Path="ToolTip" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="Watermark" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppTextBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <TextBlock x:Name="Wm" Text="" Foreground="#FF818181" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" Padding="2,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                        </Border>
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TertiaryColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="HasContextMenu" Value="False">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu Visibility="Collapsed"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark}" TargetName="Wm"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark}" TargetName="Wm"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Text" Value="{x:Static sys:String.Empty}" TargetName="Wm"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
