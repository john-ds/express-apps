<ex:ExpressWindow x:Class="Quota_Express.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Quota_Express"
        xmlns:ex="clr-namespace:ExpressControls;assembly=ExpressControls"
        mc:Ignorable="d" x:Name="Main"
        Title="Quota Express" Loaded="Main_Loaded" Closing="Main_Closing" Height="680" Width="1180" MinWidth="600" d:FontFamily="Inter" MinHeight="415" Style="{DynamicResource ChromeWindowStyle}">
    <ex:ExpressWindow.Resources>
        <local:PercentageTakenConverter x:Key="PercentageTakenConverter"/>
        <local:PercentageTakenInverseConverter x:Key="PercentageTakenInverseConverter"/>
        <local:FileSizeConverter x:Key="FileSizeConverter"/>
        <ContextMenu x:Key="ItemMenu" FontSize="14" Background="{DynamicResource SecondaryColor}" Style="{DynamicResource ExpressContextMenu}">
            <MenuItem Click="OpenBtn_Click" Header="{DynamicResource OpenStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="CopyPathBtn_Click" Header="{DynamicResource QtCopyPathStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="CopySizeBtn_Click" Header="{DynamicResource QtCopySizeStr}" Style="{DynamicResource ExpressMenuItem}"/>
            <MenuItem Click="CopySizeBytesBtn_Click" Header="{DynamicResource QtCopySizeBytesStr}" Style="{DynamicResource ExpressMenuItem}"/>
        </ContextMenu>
        
        <Storyboard x:Key="SideStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid4">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MenuPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HomeStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HomePnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ViewStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ViewPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExportStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExportPnl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- Shortcuts -->
        <RoutedUICommand x:Key="AllCommand" Text="All"></RoutedUICommand>
        <RoutedUICommand x:Key="NavigateCommand" Text="Navigate"></RoutedUICommand>
        <RoutedUICommand x:Key="ChartCommand" Text="Charts"></RoutedUICommand>
        <RoutedUICommand x:Key="DriveCommand" Text="DriveAnalysis"></RoutedUICommand>
        <RoutedUICommand x:Key="FolderCommand" Text="FolderAnalysis"></RoutedUICommand>
        <RoutedUICommand x:Key="SelectFolderTxtCommand" Text="SelectTxt"></RoutedUICommand>

    </ex:ExpressWindow.Resources>
    <ex:ExpressWindow.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Help" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="ApplicationCommands.Properties" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{StaticResource AllCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource NavigateCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource ChartCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="NavigationCommands.Refresh" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource DriveCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource FolderCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="{StaticResource SelectFolderTxtCommand}" Executed="CommandBinding_Executed" />
        <CommandBinding Command="NavigationCommands.BrowseBack" Executed="CommandBinding_Executed" />
        <CommandBinding Command="NavigationCommands.BrowseForward" Executed="CommandBinding_Executed" />
    </ex:ExpressWindow.CommandBindings>
    <ex:ExpressWindow.InputBindings>
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource AllCommand}" />
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{StaticResource NavigateCommand}" />
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{StaticResource ChartCommand}" />
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{StaticResource DriveCommand}" />
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{StaticResource FolderCommand}" />
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{StaticResource SelectFolderTxtCommand}" />
    </ex:ExpressWindow.InputBindings>

    <Grid x:Name="WindowGrid">
        <Grid x:Name="grid1" Background="{DynamicResource TertiaryColor}">
            <DockPanel Margin="0">
                <TabControl x:Name="DocTabs" Margin="0,4,0,0" DockPanel.Dock="Top" Height="68" Padding="0" BorderThickness="0" SelectedIndex="1" Panel.ZIndex="1">
                    <TabControl.Effect>
                        <DropShadowEffect Direction="270" Color="Gray" Opacity="0.1" BlurRadius="10"/>
                    </TabControl.Effect>
                    <TabItem x:Name="MenuTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="MenuScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="MenuPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="OptionsBtn" Click="OptionsBtn_Click" Text="{DynamicResource OptionStr}" Icon="{DynamicResource GearsIcon}"/>
                                    <ex:MenuButton x:Name="AboutBtn" Click="AboutBtn_Click" Text="{DynamicResource AboutQuotaStr}" Icon="{DynamicResource InfoIcon}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="MenuScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="MenuLeftBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="MenuRightBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="HomeTab" Header="TabItem" Focusable="False">
                        <Grid x:Name="grid2" Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="HomeScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="HomePnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="BackBtn" Click="BackBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource NoUndoIcon}" ToolTip="{DynamicResource BackStr}" IsEnabled="False"/>
                                    <ex:MenuButton x:Name="ForwardBtn" Click="ForwardBtn_Click" TextVisibility="Collapsed" Icon="{DynamicResource NoRedoIcon}" ToolTip="{DynamicResource ForwardStr}"  IsEnabled="False"/>
                                    <ex:MenuButton x:Name="ChooseFolderBtn" Click="ChooseFolderBtn_Click" Text="{DynamicResource ChooseFolderStr}" IsRSquared="True" Icon="{DynamicResource OpenIcon}" ToolTip="{DynamicResource NavigateToolStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}" Margin="-12,0" Width="15"/>
                                    <ex:MenuButton x:Name="MoreFoldersBtn" Click="MoreFoldersBtn_Click" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource DownIcon}" IsMini="True" Padding="2,0,6,0" Height="32" ToolTip="{DynamicResource ChooseSpecialFolderStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:AppTextBox x:Name="CurrentFolderTxt" PreviewKeyDown="CurrentFolderTxt_PreviewKeyDown" Margin="6,0" Width="450" FontSize="12" UndoLimit="0" IsUndoEnabled="False" VerticalContentAlignment="Center" VerticalAlignment="Center" Padding="2" AutomationProperties.Name="{DynamicResource FilepathStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <ex:MenuButton x:Name="FolderAnalysisBtn" Click="FolderAnalysisBtn_Click" Text="{DynamicResource FolderAnalysisStr}" Icon="{DynamicResource BarChartIcon}" ToolTip="{DynamicResource FolderToolStr}"/>
                                    <ex:MenuButton x:Name="DriveAnalysisBtn" Click="DriveAnalysisBtn_Click" Text="{DynamicResource DriveAnalysisStr}" Icon="{DynamicResource DriveIcon}" ToolTip="{DynamicResource DriveToolStr}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="HomeScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="HomeLeftBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="HomeRightBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="ViewTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="ViewScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="ViewPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:AppCheckBox x:Name="FilesBtn" Click="FilesBtn_Click" Content="{DynamicResource QtFileStr}" IsChecked="True"/>
                                    <ex:AppCheckBox x:Name="FoldersBtn" Click="FoldersBtn_Click" Content="{DynamicResource QtFolderStr}" IsChecked="True"/>
                                    <ex:AppCheckBox x:Name="PercentageBarsBtn" Content="{DynamicResource PercentageStr}" ToolTip="{DynamicResource PercentageToolStr}" IsChecked="True"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <TextBlock x:Name="FilterBtnLbl" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource FilterTypeStr}" Padding="10,0,5,0"/>
                                    <ex:MenuButton x:Name="FilterBtn" Click="FilterBtn_Click" MoreVisibility="Visible" Text="{DynamicResource FlNoneStr}" Icon="{DynamicResource BlankIcon}" AutomationProperties.LabeledBy="{Binding ElementName=FilterBtnLbl}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <TextBlock x:Name="SortBtnLbl" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource SortStr}" Padding="10,0,5,0"/>
                                    <ex:MenuButton x:Name="SortBtn" Click="SortBtn_Click" MoreVisibility="Visible" Text="{DynamicResource NameAZStr}" AutomationProperties.LabeledBy="{Binding ElementName=SortBtnLbl}" Icon="{DynamicResource HeightIcon}"/>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="ViewScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="ViewLeftBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="ViewRightBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="ExportTab" Header="TabItem" Focusable="False">
                        <Grid Background="{DynamicResource SecondaryColor}">
                            <ScrollViewer x:Name="ExportScrollViewer" Margin="0,0,58,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                                <ScrollViewer.Resources>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Resources>
                                <StackPanel x:Name="ExportPnl" Margin="12,4,2,0" Background="{DynamicResource SecondaryColor}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">
                                    <ex:MenuButton x:Name="ChartBtn" Click="ChartBtn_Click" Text="{DynamicResource ChartsStr}" Icon="{DynamicResource DoughnutIcon}" ToolTip="{DynamicResource ChartToolQuotaStr}"/>
                                    <Separator Style="{StaticResource VerticalSeparator}"/>
                                    <GroupBox Header="{DynamicResource ExportAsStr}" Style="{DynamicResource ExpressHiddenGroupBox}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Text="{DynamicResource ExportAsStr}" Padding="5,0"/>
                                            <ex:MenuButton x:Name="ExportTXTBtn" Click="ExportBtns_Click" Text="TXT" Icon="{DynamicResource TxtIcon}"/>
                                            <ex:MenuButton x:Name="ExportCSVBtn" Click="ExportBtns_Click" Text="CSV" Icon="{DynamicResource CsvIcon}"/>
                                            <ex:MenuButton x:Name="ExportRTFBtn" Click="ExportBtns_Click" Text="RTF" Icon="{DynamicResource RtfIcon}"/>
                                            <ex:MenuButton x:Name="ExportXMLBtn" Click="ExportBtns_Click" Text="XML" Icon="{DynamicResource CodeFileIcon}"/>
                                            <ex:MenuButton x:Name="ExportJSONBtn" Click="ExportBtns_Click" Text="JSON" Icon="{DynamicResource DocumentFileIcon}"/>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </ScrollViewer>
                            <Grid x:Name="ExportScroll" HorizontalAlignment="Right" Background="{DynamicResource SecondaryColor}">
                                <StackPanel Orientation="Horizontal" Margin="5,4,5,0">
                                    <ex:MenuButton x:Name="ExportLeftBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsRSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource LeftIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="180" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                    <ex:MenuButton x:Name="ExportRightBtn" Focusable="False" Background="{DynamicResource SecondaryColor}" IsLSquared="True" TextVisibility="Collapsed" Icon="{DynamicResource RightIcon}" Padding="0">
                                        <ex:MenuButton.Effect>
                                            <DropShadowEffect Direction="0" Color="#FFA0A0A0" ShadowDepth="2" Opacity="0.2"/>
                                        </ex:MenuButton.Effect>
                                    </ex:MenuButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <DockPanel x:Name="StatusBar" Margin="0" DockPanel.Dock="Bottom" Height="28" Background="{DynamicResource SecondaryColor}" VerticalAlignment="Bottom">
                    <ex:AppButton x:Name="ClearBtn" Click="ClearBtn_Click" Visibility="Collapsed" Text="{DynamicResource ClearSelectionStr}" FontSize="12" Background="Transparent" IconSize="20" Icon="{DynamicResource CrossIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" DockPanel.Dock="Right" GapMargin="5,0,0,0"/>
                    <ex:AppButton x:Name="SelectAllBtn" Click="SelectAllBtn_Click" Text="{DynamicResource SelectAllQuotaStr}" FontSize="12" Background="Transparent" IconSize="20" Icon="{DynamicResource EditorIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" DockPanel.Dock="Right" GapMargin="5,0,0,0"/>
                    <ex:AppButton x:Name="NotificationsBtn" Click="NotificationsBtn_Click" TextVisibility="Collapsed" Background="Transparent" GapMargin="0" IconSize="20" Icon="{DynamicResource NotificationIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" Padding="5,0" ToolTip="{DynamicResource NotificationStr}"/>
                    <ex:AppButton x:Name="RefreshBtn" Click="RefreshBtn_Click" Text="{DynamicResource ItemCountStr}" FontSize="12" Background="Transparent" IconSize="20" Icon="{DynamicResource RotateLeftIcon}" CornerRadius="0" NoShadow="True" Margin="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" Height="28" ToolTip="{DynamicResource RefreshStr}" GapMargin="5,0,0,0"/>
                    <TextBlock x:Name="StatusLbl" Text="Quota Express" Margin="5,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" AutomationProperties.LiveSetting="Polite"/>
                </DockPanel>
                <Rectangle Fill="{DynamicResource AppColor}" Height="2" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Margin="0"/>
                <Grid>
                    <DockPanel Panel.ZIndex="-2">
                        <Border x:Name="SideBarGrid" BorderBrush="{DynamicResource AppColor}" BorderThickness="0" HorizontalAlignment="Left" DockPanel.Dock="Right" Width="250" Margin="0">
                            <Grid x:Name="grid4" Background="{DynamicResource TertiaryColor}" Margin="10,10,0,0">
                                <ScrollViewer x:Name="SlideScroller" Margin="2,46,0,0">
                                    <StackPanel>
                                        <TextBlock x:Name="ErrorDriveTxt" Margin="15,10,10,10" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource ErrorDriveStr}" TextWrapping="Wrap" Visibility="Collapsed"/>
                                        <local:CircularProgressBar x:Name="CircleProgress" Style="{DynamicResource circularProgressBar}" VerticalAlignment="Top" Margin="0,15,0,0"/>
                                        <StackPanel x:Name="FolderStack" UseLayoutRounding="True" Visibility="Collapsed">
                                            <TextBlock x:Name="SubtitleFolderTxt" Margin="10,10,10,0" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource SelectionFolderStr}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="SelectionHeaderTxt" Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" TextWrapping="Wrap" Text="{DynamicResource SelectionSizeStr}" TextAlignment="Center" Visibility="Collapsed"/>
                                            <TextBlock x:Name="SelectionTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="0 MB" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                            <TextBlock x:Name="CurrentHeaderTxt" Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" TextWrapping="Wrap" Text="{DynamicResource ThisFolderStr}" TextAlignment="Center"/>
                                            <TextBlock x:Name="TopBtnTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="Documents" HorizontalAlignment="Center"/>
                                            <TextBlock x:Name="SizeHeaderTxt" Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" TextWrapping="Wrap" Text="{DynamicResource TotalFolderSizeStr}" TextAlignment="Center"/>
                                            <TextBlock x:Name="TotalSizeTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="0 MB" HorizontalAlignment="Center"/>
                                            <ex:AppButton x:Name="CopyDetailsBtn" Click="CopyDetailsBtn_Click" Icon="{DynamicResource CopyIcon}" Text="{DynamicResource CopyDetailsStr}" IconSize="20" Height="32" MoreVisibility="Visible" Margin="0,20" VerticalAlignment="Top" HorizontalAlignment="Center">
                                                <ex:AppButton.ContextMenu>
                                                    <ContextMenu x:Name="CopyDetailsMenu" FontSize="14" Background="{DynamicResource SecondaryColor}" Style="{DynamicResource ExpressContextMenu}">
                                                        <MenuItem Click="CopyPathBtn_Click" Header="{DynamicResource QtCopyPathStr}" Style="{DynamicResource ExpressMenuItem}"/>
                                                        <MenuItem Click="CopySizeBtn_Click" Header="{DynamicResource QtCopySizeStr}" Style="{DynamicResource ExpressMenuItem}"/>
                                                        <MenuItem Click="CopySizeBytesBtn_Click" Header="{DynamicResource QtCopySizeBytesStr}" Style="{DynamicResource ExpressMenuItem}"/>
                                                    </ContextMenu>
                                                </ex:AppButton.ContextMenu>
                                            </ex:AppButton>
                                            <StackPanel x:Name="InsightStack" Margin="0,0,0,10" Visibility="Collapsed">
                                                <Rectangle Fill="{DynamicResource AppColor}" Height="2" Width="50" Margin="0,10"/>
                                                <ContentControl Width="32" Height="32" Margin="10,5,10,0" HorizontalAlignment="Center" Focusable="False" Content="{DynamicResource StarIcon}"/>
                                                <TextBlock Margin="10,5,10,0" FontSize="15" FontWeight="SemiBold" TextWrapping="Wrap" Text="{DynamicResource QuickTipStr}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                                <TextBlock x:Name="InsightTxt" Margin="10,10,10,5" FontSize="14" TextWrapping="Wrap" HorizontalAlignment="Center" TextAlignment="Center"/>
                                            </StackPanel>
                                            <StackPanel x:Name="BreakdownStack" Margin="0,0,0,10" Visibility="Collapsed">
                                                <Rectangle Fill="{DynamicResource AppColor}" Height="2" Width="50" Margin="0,10"/>
                                                <TextBlock Margin="10,10,10,0" FontSize="15" FontWeight="SemiBold" TextWrapping="Wrap" Text="{DynamicResource BreakdownStr}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                                <ItemsControl x:Name="BreakdownItems" Margin="10">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <VirtualizingStackPanel/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <DockPanel Height="30">
                                                                <ContentControl Content="{Binding Icon}" Width="24" HorizontalAlignment="Left" Margin="3,0" Height="24" />
                                                                <TextBlock VerticalAlignment="Center" FontSize="14" Margin="0,0,5,0" Text="{Binding Path=Size, Converter={StaticResource FileSizeConverter}}" Padding="5,0,0,0" TextTrimming="CharacterEllipsis" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                                                                <TextBlock VerticalAlignment="Center" FontSize="14" Margin="0,0,10,0" Text="{Binding Name}" ToolTip="{Binding Name}" Padding="5,0,0,0" TextTrimming="CharacterEllipsis"/>
                                                            </DockPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel x:Name="DriveStack" UseLayoutRounding="True">
                                            <TextBlock x:Name="DriveNameTxt" Margin="10,10,10,0" FontSize="15" FontWeight="SemiBold" VerticalAlignment="Top" Text="C:\" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="SubtitleDriveTxt" Margin="10,5,10,0" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource TotalUsageStr}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource SpaceTakenStr}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="DriveTakenTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="0 MB" HorizontalAlignment="Center"/>
                                            <TextBlock Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource RemainingStr}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="DriveRemainingTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="0 MB" HorizontalAlignment="Center"/>
                                            <TextBlock Margin="0,20,0,0" FontSize="14" VerticalAlignment="Top" Text="{DynamicResource TotalDriveStr}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="DriveTotalTxt" Margin="10,0" FontSize="15" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" Text="0 MB" HorizontalAlignment="Center"/>
                                            <ex:AppButton x:Name="DriveMenuBtn" Click="DriveMenuBtn_Click" Icon="{DynamicResource DriveIcon}" Text="{DynamicResource OtherDrivesStr}" IconSize="20" Height="32" MoreVisibility="Visible" Margin="0,20" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                </ScrollViewer>
                                <Grid Height="44" Margin="0,0,10,0" VerticalAlignment="Top" Background="{DynamicResource TertiaryColor}">
                                    <DockPanel>
                                        <ex:AppButton IconSize="14" x:Name="HideSideBarBtn" ToolTip="{DynamicResource ClosePaneStr}" DockPanel.Dock="Right" Background="{DynamicResource TertiaryColor}" TextVisibility="Collapsed" Icon="{DynamicResource CloseIcon}" Padding="5,0" Height="24" NoShadow="True" Margin="0"/>
                                        <TextBlock x:Name="SideHeaderLbl" Margin="15,0,0,0" FontWeight="SemiBold" FontSize="16" VerticalAlignment="Center" Opacity="0.7" HorizontalAlignment="Left" Width="177.827" TextTrimming="CharacterEllipsis" Text="Quota Express"/>
                                    </DockPanel>
                                    <Rectangle Fill="{DynamicResource TertiaryColor}" Height="2" VerticalAlignment="Top"/>
                                </Grid>
                            </Grid>
                        </Border>

                        <ScrollViewer x:Name="Scroller" Background="{DynamicResource BackColor}">
                            <ItemsControl x:Name="ItemsStack" Margin="30">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Click="ItemBtn_Click" ex:LoggingProperties.DisableLogging="True" PreviewMouseDoubleClick="ItemBtn_PreviewMouseDoubleClick" AutomationProperties.Name="{Binding AutomationName}" ToolTip="{Binding FilePathFormatted}" Tag="{Binding FilePath}" Padding="0" HorizontalContentAlignment="Stretch" Background="Transparent" BorderThickness="0" Style="{DynamicResource AppButton}" Margin="0" ContextMenu="{StaticResource ItemMenu}">
                                            <DockPanel Margin="10,5">
                                                <Grid DockPanel.Dock="Bottom" Height="2" Margin="65,5,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding Path=PercentTaken, Converter={StaticResource PercentageTakenConverter}}"/>
                                                        <ColumnDefinition Width="{Binding Path=PercentTaken, Converter={StaticResource PercentageTakenInverseConverter}}"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Style>
                                                        <Style TargetType="{x:Type Grid}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsChecked, ElementName=PercentageBarsBtn}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <Grid Background="{DynamicResource AppColor}"/>
                                                    <Grid Grid.Column="1" Background="{DynamicResource AppPressedColor}"/>
                                                </Grid>
                                                <ContentControl Width="20" VerticalAlignment="Center" Margin="0,0,10,0" Height="20" Focusable="False">
                                                    <ContentControl.Style>
                                                        <Style TargetType="{x:Type ContentControl}">
                                                            <Setter Property="Content" Value="{DynamicResource UntickIcon}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Selected}" Value="True">
                                                                    <Setter Property="Content" Value="{DynamicResource TickIcon}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                                <ContentControl Content="{Binding Icon}" Width="24" VerticalAlignment="Center" Margin="0" Height="24" Focusable="False"/>
                                                <TextBlock DockPanel.Dock="Right" Foreground="{DynamicResource TextColor}" VerticalAlignment="Center" FontSize="14" Text="{Binding Path=FileSize, Converter={StaticResource FileSizeConverter}}" FontWeight="SemiBold" Padding="15,0,0,0" TextWrapping="NoWrap">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Tag, ElementName=SortBtn}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Right" Foreground="{DynamicResource TextColor}" VerticalAlignment="Center" FontSize="14" Text="{Binding DateCreatedString}" FontWeight="SemiBold" Padding="15,0,0,0" TextWrapping="NoWrap">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Tag, ElementName=SortBtn}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource TextColor}" FontSize="14" Text="{Binding FileName}" Padding="10,0,0,0" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                                            </DockPanel>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </DockPanel>
                </Grid>
            </DockPanel>
        </Grid>

        <Rectangle x:Name="MainRect" Height="30" VerticalAlignment="Top" Fill="{DynamicResource AppColor}"></Rectangle>
        <DockPanel Height="30" Margin="0" VerticalAlignment="Top">
            <ex:AppButton x:Name="CloseBtn" IsCloseBtn="True" Background="Transparent" Icon="{DynamicResource CloseWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource CloseStr}"/>
            <ex:AppButton x:Name="MaxBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MaxWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MaxStr}"/>
            <ex:AppButton x:Name="MinBtn" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource MinWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource MinStr}"/>
            <ex:AppButton x:Name="HelpBtn" Click="HelpBtn_Click" IsInTitleBar="True" Background="Transparent" Icon="{DynamicResource HelpWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="16" Height="30" Padding="7,0" TextVisibility="Collapsed" DockPanel.Dock="Right" ToolTip="{DynamicResource HelpStr}"/>

            <ex:AppButton x:Name="AppLogoBtn" HasNoEffects="True" Focusable="False" Background="Transparent" Icon="{DynamicResource AppWhiteIcon}" NoShadow="True" CornerRadius="0" IconSize="20" Height="30" Padding="6,0,0,0" TextVisibility="Collapsed"/>
            <RadioButton x:Name="MenuBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource MenuStr}" GroupName="MainTabs"/>
            <Separator x:Name="MenuSeparator" Style="{StaticResource VerticalSeparator}" Background="White" Width="18" Margin="-8,0"/>
            <RadioButton x:Name="HomeBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource HomeStr}" GroupName="MainTabs" IsChecked="True"/>
            <RadioButton x:Name="ViewBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource ViewMStr}" GroupName="MainTabs"/>
            <RadioButton x:Name="ExportBtn" Style="{DynamicResource ExpressMenuTab}" Content="{DynamicResource ExportMStr}" GroupName="MainTabs"/>

            <ex:AppButton x:Name="TitleBtn" Text="{Binding Title, ElementName=Main}" Focusable="False" HasNoEffects="True" TextAlign="Right" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Foreground="White" FontSize="12" GapMargin="0" Background="Transparent" NoShadow="True" CornerRadius="0" IconVisibility="Collapsed" Height="30" Padding="7,0"/>
        </DockPanel>

        <Popup x:Name="NotificationsPopup" UseLayoutRounding="True" Placement="Top" PlacementTarget="{Binding ElementName=NotificationsBtn}" AllowsTransparency="True" PopupAnimation="Slide" StaysOpen="False">
            <Grid Height="160" Width="360">
                <ContentControl Content="{StaticResource PopupShadow}" Focusable="False"/>
                <Border Margin="10" CornerRadius="5" Background="{DynamicResource SecondaryColor}">
                    <ex:ClippedBorder CornerRadius="5">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel x:Name="NotificationsStack" Margin="0" AutomationProperties.LiveSetting="Polite">
                                <Label x:Name="NotificationsHeaderLbl" FontWeight="SemiBold" VerticalAlignment="Top" Height="45" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,5" FontSize="15" Content="{DynamicResource NotificationStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}"/>
                                <Label x:Name="NotificationLoading" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="{DynamicResource PleaseWaitStr}" Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14"/>
                                <Label x:Name="NotificationsTxt" VerticalAlignment="Top" VerticalContentAlignment="Bottom" Margin="0" Padding="20,0,0,0" Content="No notifications." Background="{x:Null}" Foreground="{DynamicResource TextColor}" FontSize="14" Visibility="Collapsed"/>
                                <StackPanel x:Name="NotifyBtnStack" Orientation="Horizontal" HorizontalAlignment="Left" Margin="20,20,0,0" Visibility="Collapsed">
                                    <ex:AppButton x:Name="UpdateBtn" Click="UpdateBtn_Click" Icon="{DynamicResource DownloadIcon}" Text="{DynamicResource UpdateStr}" FontWeight="SemiBold" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                    <ex:AppButton x:Name="UpdateInfoBtn" Click="UpdateInfoBtn_Click" Icon="{DynamicResource HelpIcon}" Text="{DynamicResource FindOutMoreStr}" Margin="10,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </ex:ClippedBorder>
                </Border>
            </Grid>
        </Popup>
        <Popup x:Name="FoldersPopup" PlacementTarget="{Binding ElementName=ChooseFolderBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <ItemsControl x:Name="FolderItems" Margin="0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ex:AppButton Click="FolderBtns_Click" Tag="{Binding ID}" Text="{Binding Name}" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{Binding Icon}" NoShadow="True" Background="Transparent"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="DrivePopup" PlacementTarget="{Binding ElementName=DriveMenuBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <ItemsControl x:Name="DriveItems" Margin="0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ex:AppButton Click="DrivePopupBtns_Click" ex:LoggingProperties.DisableLogging="True" NoShadow="True" MaxWidth="400" Text="{Binding DisplayName}" Icon="{Binding Icon}" Tag="{Binding Name}" CornerRadius="0" HorizontalContentAlignment="Stretch" Height="32"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="FilterPopup" Closed="FilterPopup_Closed" PlacementTarget="{Binding ElementName=FilterBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ItemsControl x:Name="FilterItems">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppRadioButton Click="FilterBtns_Click" Tag="{Binding ID}" Content="{Binding Name}" IsChecked="{Binding Path=Selected, Mode=OneWay}" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="FilterOptions"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ex:AppTextBox x:Name="CustomFilterTxt" AutomationProperties.Name="{DynamicResource CustomStr}" Watermark=".jpg,.png,.present" Margin="44,0,10,10" Width="150" FontSize="12" Padding="2" MinLines="1" MaxLines="1" TextWrapping="NoWrap" AcceptsReturn="False"/>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="SortPopup" PlacementTarget="{Binding ElementName=SortBtn}" VerticalOffset="5" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer>
                <StackPanel Margin="0">
                    <ItemsControl x:Name="SortItems">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ex:AppRadioButton Click="SortBtns_Click" Tag="{Binding ID}" Content="{Binding Name}" IsChecked="{Binding Path=Selected, Mode=OneWay}" HorizontalContentAlignment="Stretch" CornerRadius="0" GroupName="SortOptions"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ex:PopupContainer>
        </Popup>
        <Popup x:Name="HelpPopup" PlacementTarget="{Binding ElementName=HelpBtn}" Placement="Left" HorizontalOffset="10" Style="{StaticResource ExpressPopup}">
            <ex:PopupContainer Width="280" Background="{DynamicResource AppColor}" Margin="10,0,10,10">
                <DockPanel>
                    <TextBox x:Name="HelpSearchTxt" AutomationProperties.LabeledBy="{Binding ElementName=HelpInfoTxt}" TextChanged="HelpSearchTxt_TextChanged" Margin="5,3" UseLayoutRounding="False" VerticalContentAlignment="Center" VerticalAlignment="Top" Height="24" UndoLimit="0" Padding="0" Foreground="{DynamicResource TextColor}" Background="{DynamicResource BackColor}" Template="{DynamicResource RoundedTextBox}" DockPanel.Dock="Top">
                        <TextBox.ContextMenu>
                            <ContextMenu Visibility="Collapsed"/>
                        </TextBox.ContextMenu>
                    </TextBox>
                    <StackPanel DockPanel.Dock="Top" Background="{DynamicResource SecondaryColor}">
                        <TextBlock x:Name="HelpInfoTxt" Text="{DynamicResource SearchHelpStr}" Margin="10,5" TextWrapping="Wrap"></TextBlock>
                        <ItemsControl x:Name="HelpTopicItems">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ex:AppButton Click="HelpTopicBtns_Click" Text="{Binding Name}" Tag="{Binding ID}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{Binding Icon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Rectangle Height="2" Fill="{DynamicResource AppColor}"></Rectangle>
                        <ex:AppButton x:Name="HelpLinkBtn" Click="HelpLinkBtn_Click" Text="{DynamicResource OnlineHelpStr}" TextMargin="2,5,2,6" HorizontalContentAlignment="Stretch" CornerRadius="0" Icon="{DynamicResource HelpIcon}" NoShadow="True" Background="Transparent" Height="Auto" TextWrapping="Wrap" Padding="10,0"/>
                    </StackPanel>
                </DockPanel>
            </ex:PopupContainer>
        </Popup>
    </Grid>
</ex:ExpressWindow>
